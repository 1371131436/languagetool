<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE rules SYSTEM "../rules.dtd">
<?xml-stylesheet type="text/xsl" href="../print.xsl" 
title="Pretty print" ?>
<?xml-stylesheet type="text/css" href="../rules.css" 
title="Easy editing stylesheet" ?>
<!--
A demo rule file for LanguageTool
Copyright (C) 2005 Daniel Naber (http://www.danielnaber.de)
$Id: grammar.xml,v 1.7 2007-05-19 17:32:03 milek_pl Exp $
-->

<rules lang="xx">

<!-- devising phrase syntax, not for production yet -->
<phrases>
	<phrase id="NP">
		<token>trivial</token>
		<token>phrase</token>
		<token>demo</token>
		<token><exception>exception</exception></token>
		</phrase>	
		<phrase id="COMPLEX_PHRASE">
		<token>complex</token>
		<includephrases>
			<phraseref idref="NP"/>
		</includephrases>
		<token>another</token>
	</phrase>
	<phrase id="DUMMY_VB1">
		<token regexp="yes">go|goa</token>
	</phrase>
	<phrase id="DUMMY_VB2">
		<token>goes</token>
	</phrase>
	<phrase id="DUMMY_VB3">
		<token>went</token>
	</phrase>
	<phrase id="COMPLEX_MULTIPLE">
		<token>first</token>
		<includephrases>
			<phraseref idref="DUMMY_VB1"/>
			<phraseref idref="DUMMY_VB2"/>
			<phraseref idref="DUMMY_VB3"/>
		</includephrases>
		<token>last</token>
	</phrase>
	<phrase id="SINGLE_TOKEN">
		<token>single</token>
	</phrase>
	<phrase id="TEST_INCLUDE">
	<token>beginning</token>
		<includephrases>
			<phraseref idref="COMPLEX_MULTIPLE"/>			
			<phraseref idref="SINGLE_TOKEN"/>
		</includephrases>
	<token>end</token>
	</phrase>
	<phrase id="trivial_include">
		<includephrases>
			<phraseref idref="DUMMY_VB1"/>
		</includephrases>
		<includephrases>
			<phraseref idref="DUMMY_VB2"/>
		</includephrases>
	</phrase>
</phrases>



  <category name="misc">

    <!-- a trivialdemo rule that matches "foo" followed by "bar" -->
    <rule id="DEMO_RULE" name="Find 'foo bar'">
      <pattern mark_from="0" case_sensitive="no">
        <token>foo</token>
        <token>bar</token>
      </pattern>
      <message>Did you mean <suggestion><match no="1"/> fuu bah</suggestion>?</message>
      <example type="correct">This is <marker>fuu bah</marker>.</example>
      <example type="incorrect" correction="foo fuu bah">This is <marker>foo bar</marker>.</example>
    </rule>

    <rule id="API_OUTPUT_TEST_RULE" name="Find 'foo bar'">
      <pattern mark_from="1" case_sensitive="no">
        <token>ach</token>
        <token>thosnaíos-sa</token>
      </pattern>
      <message>Did you mean <suggestion>fuu bah</suggestion>?</message>
      <example type="correct">This is ach <marker>fuu bah</marker>.</example>
      <example type="incorrect">This is ach <marker>thosnaíos-sa</marker>.</example>
    </rule>

    <rule id="NEGATION_TOKEN" name="test negation">
      <pattern mark_from="1">
        <token>small</token>
        <token negate="yes">test</token>
      </pattern>
      <message>test</message>
      <example type="correct">a small <marker>test</marker></example>
      <example type="incorrect">a small <marker>toast</marker></example>
    </rule>
  
  	<rule id="TEST_GO" name="another test of phrases">
		<pattern>
			<token>foo</token>
			<phraseref idref="DUMMY_VB1"/>
		</pattern>
		<message>Error!</message>
		<example type="correct">foo bar</example>
		<example type="incorrect"><marker>foo go</marker></example>
		<example type="incorrect"><marker>foo go</marker> bar</example>
		<example type="incorrect"><marker>foo goa</marker> bar</example>
		</rule>
    
    <rule id="TEST_PHRASES1" name="test phrases mechanism">
    <pattern>
    	<phraseref idref="COMPLEX_MULTIPLE"/>
    	<token>there</token>
    </pattern>
    <message>This is the matched text: <match no="1"/><match no="2"/></message>
    <example type="correct">go here</example>
    <example type="incorrect"><marker>first goes last there</marker>, please!</example>
    </rule>	

		<rule id="test_include" name="test two includeblocks">
		<pattern>
			<phraseref idref="TEST_INCLUDE"/>			
		</pattern>
		<message>Matched: <match no="1"/><match no="2"/></message>
		<example type="correct">Any string.</example>
		<example type="incorrect">Some words, <marker>beginning first go last end</marker></example>
		</rule>
			
		<rule id="test_two_phrases" name="test two phrases">
		<pattern>
			<phraseref idref="COMPLEX_MULTIPLE"/>
			<phraseref idref="SINGLE_TOKEN"/>
		</pattern>
		<message>Matched: <match no="1"/><match no="2"/></message>
		<example type="correct">Any string.</example>
		<example type="incorrect">First words and <marker>first go last</marker></example>
		</rule>  
				
		<rule id="test_and_operator" name="test logical AND">
			<pattern mark_to="-1">
				<and>
					<token regexp="yes">A.*</token>
					<token regexp="yes">[A-Z]B.*</token>
					<token negate="yes">ABC</token>
					<token regexp="yes">.*D<exception>ABED</exception></token>
				</and>
				<token>test</token>
			</pattern>
			<message>Matched: <match no="1"/></message>
			<example type="correct">CB test</example>
			<example type="correct">ABC test</example>
			<example type="incorrect"><marker>ABCD</marker> test</example>
			<example type="incorrect"><marker>ABEED</marker> test</example>
			<example type="correct"><marker>ABED</marker> test</example>
		</rule>
		
		<rule id="test_match_ref" name="testing match element...">
			<pattern>
			<token/>
			<token>by</token>
			<token><match no="0"/></token>
			</pattern>
		<message>Found \1 \2 \3.</message>
		<example type="incorrect"><marker>Step by step</marker>.</example>
		<example type="correct">blabla</example>
		<example type="correct">Steb by step</example>
		</rule>
		
		<rule id="test_match_ref_superb" name="testing match element on steroids...">
			<pattern>
			<token/>
			<token>by</token>
			<token><match no="0"/>on</token>
			</pattern>
		<message>Found \1 \2 \3.</message>
		<example type="correct"><marker>Step by step</marker>.</example>
		<example type="incorrect"><marker>Step by stepon</marker>.</example>
		<example type="correct">blabla</example>
		<example type="correct">Steb by step</example>
		</rule>
		
		
  </category>

</rules>
