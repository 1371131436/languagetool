<?xml version="1.0" encoding="utf-8"?>
	<!--
		English Disambiguation Rules for LanguageTool Copyright (C) 2008
		Marcin MiÅ‚kowski		
$Id: disambiguation.xml,v 1.19 2008-12-02 20:19:29 milek_pl Exp $
	-->
<rules lang="en">
	<rule name="Modal verb + verb/noun -> modal verb + verb" id="MD_VB">
		<pattern mark="1">
			<token postag="MD" />
			<and>
				<token postag="VB" />
				<token postag="NN" />
			</and>
		</pattern>
		<disambig postag="VB" />
	</rule>
	<rule name="be + to + verb/... ->be + to + verb" id="BE_TO_VB">
		<pattern mark="2">
			<token inflected="yes">be</token>
			<token>to</token>
			<and>
				<token postag="VB" />
				<token postag_regexp="yes" postag="JJ|NN.*" />
			</and>
		</pattern>
		<disambig postag="VB" />
	</rule>
	<rule name="have as verb/noun + past participle -> have/modal" id="HAVE_VBN">
		<pattern mark="0">
			<token>have</token>
			<token postag="VBN" />
		</pattern>
		<disambig><match no="1" postag_regexp="yes" postag="MD" /></disambig>
	</rule>
	<rulegroup name="well + past participle -> well + adjective"
		id="WELL_VBN">
		<rule>
			<pattern mark="0">
				<token postag="RB">well</token>
				<token postag="VBN" />
			</pattern>
			<disambig><match no="1" postag_regexp="yes" postag="RB" /></disambig>
		</rule>
		<rule>
			<pattern mark="2">
				<token>well</token>
				<token postag="VBN" />
			</pattern>
			<disambig postag="JJ" />
		</rule>
	</rulegroup>
	<rulegroup name="in as noun -> in as preposition" id="IN_NN_IN">
		<rule name="in as noun/preposition + the -> in as preposition"
			id="IN_IN">
			<pattern mark="0">
				<token>in</token>
				<token postag="DT" />
			</pattern>
			<disambig postag="IN" />
		</rule>
		<rule name="in as noun/preposition + uncountable noun -> in as preposition"
			id="IN_NNUN">
			<pattern mark="0">
				<token>in</token>
				<token postag="NN:U.*" postag_regexp="yes" />
			</pattern>
			<disambig postag="IN" />
		</rule>
	</rulegroup>
	<rule
		name="the/these... + numeral + are (noun/verb) -> the... + numer + are (verb)"
		id="DT_CD_ARE_VB">
		<pattern mark="2">
			<token postag="DT" />
			<token postag="CD" />
			<token>are</token>
		</pattern>
		<disambig><match no="3" postag="VBP" postag_regexp="yes" /></disambig>
	</rule>
	<rule name="are (noun/verb)  + adjective/gerund -> are (verb)" id="ARE_JJ_VBG">
		<pattern mark="0">
			<token>are</token>
			<token postag="JJ.*|VBG" postag_regexp="yes" />
		</pattern>
		<disambig><match no="1" postag="VBP" postag_regexp="yes" /></disambig>
	</rule>
	<rule name="NNS|EX + are (noun/verb) -> are (verb)" id="NNS_ARE">
		<pattern mark="1">
			<token postag_regexp="yes" postag="EX|NNS"/>
			<token>are</token>
		</pattern>
		<disambig><match no="2" postag="VBP" postag_regexp="yes"/></disambig>
	</rule>	
	<rule name="his (noun/prep) + noun -> his (prep)" id="HIS_NN_PRP">
		<pattern mark="0">
			<token>his</token>
			<token postag="NN.*" postag_regexp="yes" />
		</pattern>
		<disambig><match no="1" postag="PRP\$" postag_regexp="yes" /></disambig>
	</rule>
	<rule name="how (noun/adv) + determiner -> how (adv)" id="HOW_NN_WRB">
		<pattern mark="0">
			<token>how</token>
			<token postag="DT" />
		</pattern>
		<disambig postag="WRB" />
	</rule>
	<rule name="los + proper name -> los (proper name)" id="LOS_NNP">
		<pattern mark="0">
			<token>Los</token>
			<token postag="NNP" />
		</pattern>
		<disambig postag="NNP" />
	</rule>
	<rule name="kind (adj) + of -> kind (n)" id="KIND_JJ">
		<pattern mark="0">
			<token>kind</token>
			<token>of</token>
		</pattern>
		<disambig postag="NN" />
	</rule>
	<rule name="be + mine (verb/pron) -> mine (pron)" id="BE_MINE">
		<pattern mark="1">
			<token inflected="yes">be</token>
			<token>mine</token>
		</pattern>
		<disambig postag="PRP$" />
	</rule>

<!-- useful for this/these rule, e.g., in this circumstances -->
	<rule name="preposition + 'this' + verb 3sg/NNS -> nns" id="IN_VBZ_NNS">
		<pattern mark="3">
			<token postag="IN"><exception regexp="yes">as|like</exception></token>
			<token regexp="yes">this|these</token>
			<and>
				<token postag="NNS" />
				<token postag="VBZ"><exception regexp="yes">means|works|shows|leads|takes|lies|goes|stems|gives|makes|does</exception></token>
			</and>
		</pattern>
		<disambig postag="NNS" />
	</rule>
	<rule name="SENT_START + pronoun + verb/NN -> verb" id="SENT_START_PRP_VB_NN">
		<pattern mark="3">
			<token postag="SENT_START" />
			<token regexp="yes">I|you|we|they</token>
			<and>
				<token postag="NN" />
				<token postag="VBP" />
			</and>
		</pattern>
		<disambig postag="VBP" />
	</rule>
	<rulegroup name="let's" id="LETS1">
		<rule>
			<pattern mark="0">
				<token>let</token>
				<token>'</token>
				<token>s</token>
			</pattern>
			<disambig postag="VBP" />
		</rule>
		<rule>
			<pattern mark="2">
				<token>let</token>
				<token>'</token>
				<token>s</token>
			</pattern>
			<disambig postag="PRP" />
		</rule>
	</rulegroup>
	<rule name="determiner + verb/NN -> NN" id="DT_VB_NN">
		<pattern mark="2">
			<token postag="DT"><exception postag="PDT" /></token>
			<and>
				<token postag="VB" />
				<token postag="NN" />
			</and>
		</pattern>
		<disambig postag="NN" />
	</rule>
	
	<!-- 'an' is part of a proper name here -->
	<rule name="Qur'an" id="QUARAN">
		<pattern mark="2">
			<token>Qur</token>
			<token>'</token>
			<token>an</token>
		</pattern>
		<disambig postag="NNP" />
	</rule>
	
	<!-- A is not a determiner but a variable in this context -->
	<rule name="a and be" id="A_AND_B">
		<pattern mark="0">
			<token>a</token>
			<token>and</token>
			<token>b</token>
		</pattern>
		<disambig postag="NNP" />
	</rule>
	<rule name="A is..." id="A_IS">
		<pattern case_sensitive="yes" mark="0">
			<token>A</token>
			<token>is</token>
		</pattern>
		<disambig postag="NNP" />
	</rule>
	<rule name="A.B.C." id="ABC">
		<pattern mark="0">
			<token>a</token>
			<token>.</token>
			<token>b</token>
			<token>.</token>
			<token>c</token>
			<token>.</token>
		</pattern>
		<disambig postag="NNP" />
	</rule>
	<!-- 'a' used as a symbol in some technical notation -->
	<rule name="A technical" id="A_TECHNICAL">
		<pattern mark="0">
			<token>a</token>
			<token regexp="yes">[/\+\[\]\(\){}\\,!%]</token>
		</pattern>
		<disambig postag="SYM"/>
	</rule>
	
	<!-- for Bob Brown etc. -->
	<rule name="NNP/VB + NNP -> NNP" id="NNP_VB_NNP">
		<pattern case_sensitive="yes" mark="0">
			<and>
				<token postag="NNP" regexp="yes">\p{Lu}\p{Ll}+</token>
				<token postag_regexp="yes" postag="VB|JJ" />
			</and>
			<token postag="NNP" regexp="yes">\p{Lu}\p{Ll}+</token>
		</pattern>
		<disambig postag="NNP" />
	</rule>
	<rule name="Uppercase word/NNP|NN -> NNP" id="UPPER_NNP">
		<pattern case_sensitive="yes" mark="0">
		<and>
			<token regexp="yes">\p{Lu}\p{Ll}+<exception scope="previous" postag="SENT_START"/></token>
			<token inflected="yes" regexp="yes" postag="NNP">\p{Lu}\p{Ll}+</token>
			<token inflected="yes" regexp="yes" postag_regexp="yes" postag="NN|NN:.*">\p{Ll}+</token>
		</and>
		</pattern>
		<disambig postag="NNP"/>
	</rule>
	
	<rulegroup name="United States" id="USA1">
		<rule>
			<pattern mark="0" case_sensitive="yes">
				<token>United</token>
				<token>States</token>
			</pattern>
			<disambig postag="NNP" />
		</rule>
		<rule>
			<pattern mark="1" case_sensitive="yes">
				<token>United</token>
				<token>States</token>
			</pattern>
			<disambig postag="NNP" />
		</rule>
	</rulegroup>
	
	<rule name="IN/NN + PRP$ -> IN" id="IN_NN_PRP">
		<pattern mark="0">
			<and>
				<token postag="IN"><exception>like</exception></token>
				<token postag="NN" />
			</and>
			<token postag_regexp="yes" postag="PRP$|NNP" />
		</pattern>
		<disambig postag="IN" />
	</rule>
	
	<!-- the known good solution -->
	<rule name="DT + VBN + JJ -> VBN=JJ" id="DT_VBN_JJ">
		<pattern mark="1">
			<token regexp="yes">a|an|the</token>
			<token postag="VBN" />
			<token postag="JJ" />
		</pattern>
		<disambig postag="JJ" />
	</rule>
	
	<!-- known written works -->
	<rule name="VBN + VBN + NN -> JJ" id="VBN_VBN_NN_JJ">
		<pattern mark="0">
			<token postag="VBN" />
			<token postag="VBN" />
			<token postag_regexp="yes" postag="NN:.*|NNS|NN" />
		</pattern>
		<disambig postag="JJ" />
	</rule>
	<rule name="of + VBN + JJ -> JJ" id="OF_VBN_JJ">
		<pattern mark="1">
			<token>of</token>
			<token postag="VBN" />
			<token postag="JJ" />
		</pattern>
		<disambig postag="JJ" />
	</rule>
	
	<!--  her duck Oliver -->
	<rule name="NN + NNP/JJR -> NNP" id="NN_NNP_JJR">
		<pattern mark="1" case_sensitive="yes">
			<token regexp="yes" postag="NN.*" postag_regexp="yes">\p{Ll}+</token>
			<and>
				<token postag="NNP" regexp="yes">\p{Lu}\p{Ll}+</token>
				<token postag="JJR" />
			</and>
		</pattern>
		<disambig postag="NNP" />
	</rule>
	
	<!--  from X to X -->
	<rulegroup name="from X to X -> NN:UN" id="from_NN_to_NN">
		<rule>
			<pattern mark="1">
				<token>from</token>
				<token postag="NN" />
				<token>to</token>
				<token><match no="1" /></token>
			</pattern>
			<disambig postag="NN:UN" />
		</rule>
		<rule>
			<pattern mark="3">
				<token>from</token>
				<token postag="NN:UN" />
				<token>to</token>
				<token><match no="1" /></token>
			</pattern>
			<disambig postag="NN:UN" />
		</rule>
	</rulegroup>
	<rulegroup name="from nose to tail" id="FROM_NOSE_TO_TAIL">
		<rule>
			<pattern mark="1">
				<token>from</token>
				<token>nose</token>
				<token>to</token>
				<token>tail</token>
			</pattern>
			<disambig postag="NN:UN" />
		</rule>
		<rule>
			<pattern mark="3">
				<token>from</token>
				<token>nose</token>
				<token>to</token>
				<token>tail</token>
			</pattern>
			<disambig postag="NN:UN" />
		</rule>
	</rulegroup>
	<rule name="sore throat" id="SORE_THROAT">
		<pattern mark="1">
			<token>sore</token>
			<token>throat</token>
		</pattern>
		<disambig postag="NN:UN" />
	</rule>	
	<rule name="give sb credit/VB -> NN:UN" id="GIVE_CREDIT">
		<pattern mark="3">
			<token inflected="yes">give</token>
			<token postag="NNP|PRP" postag_regexp="yes"/>
			<token>credit</token>
		</pattern>
		<disambig postag="NN:UN"/>
	</rule>
	<rule name="there + SENT_END -> RB" id="EX_SENT_END_RB">
		<pattern mark="0">
			<token postag="EX"/>
			<token postag_regexp="yes" postag="SENT_END|,|IN|PRP"/>
		</pattern>
		<disambig postag="RB"/>
	</rule>
	<rulegroup name="EX + was|is... + VB/NN -> NN" id="EX_ARE_NN">
	<rule>
		<pattern mark="2">
			<token postag="EX"/>
			<token regexp="yes">is|was|are|were</token>
			<and>
			<token postag="VB"/>
			<token postag_regexp="yes" postag="NN.*|JJ.*"/>
			</and>
		</pattern>
		<disambig><match no="3" postag_regexp="yes" postag="NN.*|JJ.*" /></disambig>
	</rule>
	<rule>
		<pattern mark="2">
			<token postag="EX"/>
			<token regexp="yes">is|was|are|were</token>
			<token postag="RB"><exception postag="CC"/></token>
			<and>
			<token postag="VB"/>
			<token postag_regexp="yes" postag="NN.*|JJ.*"/>
			</and>
		</pattern>
		<disambig><match no="3" postag_regexp="yes" postag="NN.*|JJ.*" /></disambig>
	</rule>
	<rule>
		<pattern mark="3">
			<token postag="EX"/>
			<token regexp="yes">have|has</token>
			<token>been</token>
			<token postag="RB"><exception postag="CC"/></token>
			<and>
			<token postag="VB"/>
			<token postag_regexp="yes" postag="NN.*|JJ.*"/>
			</and>
		</pattern>
		<disambig><match no="3" postag_regexp="yes" postag="NN.*|JJ.*" /></disambig>
	</rule>	
	</rulegroup>	
	<rule name="while (IN/NN/VBP) + PRP -> while/IN" id="WHILE_IN_PRP">
		<pattern mark="0">
			<token>while</token>
			<token postag="PRP"/>
		</pattern>
		<disambig postag="IN"/>
	</rule>
	<rule name="Web page (noun/verb) -> page (noun)" id="WEB_PAGE">
		<pattern mark="1">
		<token>web</token>
		<token>page</token>
		</pattern>
		<disambig postag="NN"/>	
	</rule>
	<rule name="DT|JJ + JJ/NN + NN -> JJ" id="DT_JJ_NN_JJ">
		<pattern mark="1">
			<token postag_regexp="yes" postag="DT|JJ"/>
			<and>
			<token postag="JJ"/>
			<token postag_regexp="yes" postag="NN.*"/>
			</and>
			<token postag_regexp="yes" postag="NN.*"/>
		</pattern>
		<disambig><match no="2" postag_regexp="yes" postag="JJ" /></disambig>			
	</rule>
	<rule name="till (verb) -> till/IN" id="TILL_IN">
		<pattern mark="0">
			<token>till</token>
			<token postag_regexp="yes" postag="PRP\$|DT"/>
			<token><exception regexp="yes">soil|land|fields|field</exception></token>
		</pattern>
		<disambig postag="IN"/>
	</rule>
	<rule name="before/after + NN/VBG + DT" id="before_NN_VBG">
		<pattern mark="1">
			<token regexp="yes">before|after</token>
			<and>
				<token postag="NN"/>
				<token postag="VBG"/>
			</and>
			<token postag="DT"/>
		</pattern>
		<disambig><match no="2" postag="VBG" postag_regexp="yes"/></disambig>
	</rule>
</rules>