<?xml version="1.0" encoding="utf-8"?>
<!--
Rules: Grammar and Typos
See tagset.txt for the meaning of the POS tags
Copyright (C) 2001-2006 Daniel Naber (http://www.danielnaber.de)
$Id: grammar.xml,v 1.51 2006-07-23 13:51:58 dnaber Exp $
-->
<rules lang="en">

   <rule id="I_ARE" name="'I is/are/...' (at sentence start only)">
      <pattern mark_from="2"><token postag="SENT_START"></token><token>I</token><token regexp="yes">is|be|are|were|has</token></pattern>
      <message>Did you mean <em>am</em> or <em>ate</em>?</message>
      <example type="correct">I <em>ate</em> at the restaurant.</example>
      <example type="correct">I <em>am</em> at the restaurant.</example>
      <example type="incorrect">I <em>are</em> at the restaurant.</example>
   </rule>
	
   <rule id="YOU_IS" name="'You is/was/has' (at sentence start only)">
      <pattern mark_from="2"><token postag="SENT_START"/><token regexp="yes">You</token><token regexp="yes">am|is|was|has</token></pattern>
      <message>Use second person verb with 'you', e.g. 'you are'</message>
      <example type="correct">You <em>are</em> too old for that.</example>
      <example type="incorrect">You <em>is</em> too old for that.</example>
   </rule>
	
   <rule id="HE_WERE" name="'He were/have/...' (at sentence start only)">
      <pattern mark_from="2"><token postag="SENT_START"/><token regexp="yes">He</token><token regexp="yes">were|have|be|am|are</token></pattern>
      <message>Use third person verb with 'he', e.g. 'he is'</message>
      <example type="correct">He <em>is</em> too old for that.</example>
      <example type="incorrect">He <em>were</em> too old for that.</example>
   </rule>
	
   <rule id="WE_IS" name="'We is/was/has' (at sentence start only)">
      <pattern mark_from="2"><token postag="SENT_START"/><token regexp="yes">We</token><token regexp="yes">am|is|was|has</token></pattern>
      <message>Use first person plural verb with 'we', e.g. 'we are'</message>
      <example type="correct">We <em>are</em> too old for that.</example>
      <example type="incorrect">We <em>is</em> too old for that.</example>
   </rule>

   <rule id="THEY_IS" name="'They is/was/has' (at sentence start only)">
      <pattern mark_from="2"><token postag="SENT_START"/><token regexp="yes">They</token><token regexp="yes">am|is|was|has</token></pattern>
      <message>Use third person plural verb with 'they', e.g. 'they are'</message>
      <example type="correct">They <em>are</em> too old for that.</example>
      <example type="incorrect">They <em>is</em> too old for that.</example>
   </rule>

	<!-- TODO: is this really an error? see http://www.edufind.com/english/grammar/ADVERBS10.cfm
   <rule id="ADVERBS_ORDER" name="word order: adverb + auxiliary verb + main verb">
      <pattern mark_from="2"><token regexp="yes">certainly|definitely|probably|undoubtedly|surely</token><token regexp="yes">has|had|have|will</token><token postag="VBN|VB"/>/pattern>
      <message>Place the adverb between </message>
      <example type="correct">He will <em>probably</em> remember tomorrow.</example>
      <example type="incorrect">He <em>probably</em> will remember tomorrow.</example>
   </rule>
   -->

   <!-- too many false alarms, e.g. "I am convinced that our suggestions..."
   <rule id="I_A_NONBASE" name="'I am' + non-gerund form">
      <pattern mark_from="2"><token regexp="yes">I</token><token regexp="yes">am</token><token postag="VB|VBD|VBN|VBP|VBZ"/>/pattern>
      <message>You might need to use the gerund form of the verb here (e.g. 'learning' instead of 'learn').</message>
      <example type="correct">I am <em>searching</em> through some fields.</example>
      <example type="incorrect">I am <em>searched</em> through some fields.</example>
   </rule>
   -->

   <!-- currently fails test case:
   <rule id="TO_NON_BASE" name="'to' + non-base form">
      <pattern mark_from="1"><token regexp="yes">to</token>VBP|VBZ^was</pattern>
      <message>You might need to use the base form of the verb here (e.g. 'learn' instead of 'learned/learning/...').</message>
      <example type="correct">I was surprised to <em>learn</em> this. </example>
      <example type="incorrect">I was surprised to <em>learns</em> this. </example>
   </rule>
   -->

   <rule id="MANY_FEW_UNCOUNTABLE" name="many/few + uncountable noun">
      <!-- fixme: more uncountable nouns
       -->
      <pattern mark_from="1" mark_to="-2"><token regexp="yes">as</token><token regexp="yes">many|few</token><token regexp="yes">air|money|software|cattle|knowledge|sand|furniture|meat|food|news|success|water|freedom|maturity|intelligence|life|information</token><token>as</token></pattern>
      <message>Use <em>much</em> or <em>little</em> with uncountable nouns</message>
      <example type="correct">John eats as <em>much</em> food as Peter.</example>
      <example type="correct">John eats as <em>little</em> food as Peter.</example>
      <example type="incorrect">John eats as <em>many</em> food as Peter.</example>
      <example type="incorrect">John eats as <em>few</em> food as Peter.</example>
   </rule>

<!-- fixme: more nouns?
         false alert: "an intelligence service"
   <rule id="A_UNCOUNTABLE" name="a + uncountable noun">
      <pattern mark_to="-1"><token regexp="yes">a|an</token><token regexp="yes">air|money|cattle|knowledge|sand|furniture|meat|food|news|water|freedom|maturity|intelligence|information</token></pattern>
      <message>Uncountable nouns are usually not used with an indefinite article.</message>
      <example type="correct"><em>The</em> information in your files is correct.</example>
      <example type="incorrect"><em>An</em> information in your files is correct.</example>
   </rule>
   -->

   <rule id="BED_ENGLISH" name="'bed/bat English/...'">
      <pattern mark_to="-1"><token regexp="yes">bed|bat</token><token regexp="yes">[Ee]nglish|attitude</token></pattern>
      <message>Did you mean <em>bad</em>?</message>
      <example type="correct">Sorry for my <em>bad</em> English.</example>
      <example type="incorrect">Sorry for my <em>bed</em> English.</example>
   </rule>

   <!-- TODO: group -->
   <rule id="YOUR" name="Possible typo 'your(you're)'">
      <pattern mark_to="-1"><token>your</token><token postag="VBG"/></pattern>
      <message>Did you mean <em>you're</em> or <em>you are</em>?</message>
      <example type="correct">Let's see if <em>you're</em> using multiple search servers.</example>
      <example type="correct">Let's see if <em>you are</em> using multiple search servers.</example>
      <example type="incorrect">Let's see if <em>your</em> using multiple search servers.</example>
   </rule>
   <rule id="YOUR2" name="Possible typo 'your(you're)'">
      <pattern mark_from="1" mark_to="-1"><token>if</token><token>your</token><token>a</token></pattern>
      <message>Did you mean <em>you're</em> or <em>you are</em>?</message>
      <example type="correct">Let's see if <em>you're</em> a developer.</example>
      <example type="incorrect">Let's see if <em>your</em> a developer.</example>
   </rule>
	
   <rule id="BOTTLE_NECK" name="Possible typo 'bottle neck(bottleneck)'">
      <pattern><token>bottle</token><token>neck</token></pattern>
      <message>Did you mean <em>bottleneck</em>?</message>
      <example type="correct">Finding the <em>bottleneck</em></example>
      <example type="incorrect">Finding the <em>bottle neck</em></example>
   </rule>

   <rule id="SENT_START_THEM" name="Possible typo 'Them(Then) at sentence start'">
      <pattern mark_from="1"><token postag="SENT_START"/><token>Them</token></pattern>
      <message>Did you mean <em>Then</em>?</message>
      <example type="correct"><em>Then</em> it became clear.</example>
      <example type="incorrect"><em>Them</em> it became clear.</example>
   </rule>

   <rule id="TO_LATE" name="Possible typo 'to(too) late'">
      <pattern mark_from="1" mark_to="-1"><token regexp="yes">much|is|was|be</token><token>to</token><token>late</token></pattern>
      <message>Did you mean <em>too</em>?</message>
      <example type="correct">It was <em>too</em> late.</example>
      <example type="correct">It was much <em>too</em> late.</example>
      <example type="incorrect">It was <em>to</em> late.</example>
      <example type="incorrect">It was much <em>to</em> late.</example>
   </rule>

   <rule id="TO_SOON" name="Possible typo 'to(too) soon'">
      <pattern mark_from="1" mark_to="-2"><token regexp="yes">comes|came|much|is|was</token><token>to</token><token>soon</token><token postag="VB" negate_pos="yes"/></pattern>
      <message>Did you mean <em>too</em>?</message>
      <example type="correct">The plan is <em>to</em> soon launch a new plane.</example>
      <example type="correct">His idea came much <em>too</em> soon to be successful.</example>
      <example type="correct">It is <em>too</em> soon to move the entire industry.</example>
      <example type="incorrect">His idea came much <em>to</em> soon to be successful.</example>
      <example type="incorrect">It is <em>to</em> soon to move the entire industry.</example>
   </rule>
	
   <rule id="TO_MUCH" name="Possible typo 'to(too) much'">
      <pattern mark_from="1" mark_to="-1"><token negate="yes">access</token><token>to</token><token>much</token></pattern>
      <message>Did you mean <em>too</em>?</message>
      <example type="correct">Because <em>too</em> much snow was on it.</example>
      <example type="correct">the password provides access <em>to</em> much more data.</example>
      <example type="incorrect">Because <em>to</em> much snow was on it.</example>
   </rule>

   <rule id="AGREEMENT_1" name="Possible agreement error: 'The (plural word) is">
      <pattern mark_from="3"><token postag="SENT_START"/><token postag="DT"/><token postag="NNS"/><token postag="VBZ"/></pattern>
      <message>Possible agreement error -- don't use third-person form of a verb (e.g. 'is') for plural nouns.</message>
      <example type="correct">The dogs <em>are</em> released.</example>
      <example type="correct">The dog is released.</example>
      <example type="incorrect">The dogs <em>is</em> released.</example>
   </rule>

   <rule id="AGREEMENT_2" name="Possible agreement error: 'The (plural word) of ... is">
      <pattern mark_from="5"><token postag="SENT_START"/><token postag="DT"/><token postag="NNS"/><token>of</token><token postag="NN"/><token postag="VBZ"/></pattern>
      <message>Possible agreement error -- don't use third-person form of a verb (e.g. 'is') for plural nouns.</message>
      <example type="correct">The dogs of war <em>are</em> released.</example>
      <example type="correct">The dog of war is released.</example>
      <example type="incorrect">The dogs of war <em>is</em> released.</example>
   </rule>

	
<!--FIXME
   <rule id="HE_VERB_AGR" name="Agreement error: Non-third person verb with 'he'">
      <pattern mark_from="2"><token regexp="yes" negate="yes">(has|will|must|could|can|should|would|does|did)</token><token>he</token><token postag="VB|VBG|VBN" postag_regexp="yes"/></pattern>
      <message>'He' must be used with a third person verb, e.g. 'he walks'</message>
      <example type="correct">He <em>walks</em> to the building.</example>
      <example type="incorrect">He <em>walk</em> to the building.</example>
   </rule>
-->

   <!-- TODO: fix false alarm for "one of you thinks ...", "even though the world around you thinks"
   <rule id="I_VERB_AGR" name="Agreement error: third person verb with 'I'">
      <pattern mark_from="1"><token regexp="yes">I|we|they|you</token><token postag="VBZ"/></pattern>
      <message>'I' must be used with a non-third person verb, e.g. 'I think'</message>
      <example type="correct">I <em>think</em> that is quite fair.</example>
      <example type="correct">Don't you <em>think</em> that is quite fair?</example>
      <example type="incorrect">I <em>thinks</em> that is quite fair.</example>
      <example type="incorrect">Don't you <em>thinks</em> that is quite fair?</example>
   </rule>
   -->
	
	<rule id="MORE_A_JJ" name="Word order: 'more a ...' instead of 'a more ...'">
		<pattern><token>more</token> <token regexp="yes">a|an</token> <token postag="JJ"/></pattern>
		<message>Did you mean <em>a more \3</em>?</message>
		<example type="correct">I can give you <em>a more detailed</em> description of what's necessary.</example>
		<example type="incorrect">I can give you <em>more a detailed</em> description of what's necessary.</example>
	</rule>

	<rule id="THINK_YOU_A" name="Typo 'think you a/an(are)'">
		<pattern mark_from="2"><token>think</token> <token>you</token> <token regexp="yes">a|an</token></pattern>
		<message>Did you mean <em>are</em>?</message>
		<example type="correct">Some would think you <em>are</em> a fortunate man.</example>
		<example type="incorrect">Some would think you <em>a</em> fortunate man.</example>
	</rule>

	<rule id="SOME_EXTEND" name="Typo 'some/certain extend(extent)">
		<pattern mark_from="1"><token regexp="yes">some|certain</token> <token>extend</token></pattern>
		<message>Did you mean <em>extent</em> ("extent" is a noun, "extend" is a verb)?</message>
		<example type="correct">Yes it is, to a certain <em>extent</em>.</example>
		<example type="incorrect">Yes it is, to a certain <em>extend</em>.</example>
	</rule>

   <rule id="IS_WERE" name="Typo 'is were(where)'">
      <pattern mark_from="1"><token>is</token><token>were</token></pattern>
      <message>Did you mean <em>where</em>?</message>
      <example type="correct">Now, this is <em>where</em> my ignorance sets in.</example>
      <example type="incorrect">Now, this is <em>were</em> my ignorance sets in.</example>
   </rule>

   <rule id="ONE_ORE" name="Typo 'one ore(or)'">
      <pattern mark_from="1"><token postag="CD"/><token>ore</token></pattern>
      <message>Did you mean <em>or</em>?</message>
      <example type="correct">Type in one <em>or</em> more words.</example>
      <example type="incorrect">Type in one <em>ore</em> more words.</example>
   </rule>

   <rule id="THE_ONLY_ON" name="Typo 'the only on(one)'">
      <pattern mark_from="2"><token>the</token><token>only</token><token>on</token></pattern>
      <message>Did you mean <em>the only one</em>?</message>
      <example type="correct">The trash folder is the only <em>one</em> for me that works.</example>
      <example type="incorrect">The trash folder is the only <em>on</em> for me that works.</example>
   </rule>

   <rule id="THEIR_IS" name="Typo 'their(there) is/are'">
      <pattern mark_to="-1"><token>their</token><token regexp="yes">(is|are)</token></pattern>
      <message>Did you mean <em>there</em>?</message>
      <example type="correct">He noticed that <em>there</em> is a new test.</example>
      <example type="incorrect">He noticed that <em>their</em> is a new test.</example>
   </rule>

   <rule id="I_A" name="Typo 'I a(am)' and 'I an(am)'">
      <!-- but: 'Am I an annoyance' -->
      <pattern mark_from="1"><token regexp="yes">I</token><token regexp="yes">a|an</token></pattern>
      <message>Did you mean <em>am</em> (first person of "to be")?</message>
      <example type="correct">I <em>am</em> not sure.</example>
      <example type="incorrect">I <em>a</em> not sure.</example>
   </rule>

   <rule id="I_NEW" name="Typo 'I/he/we new(knew)'">
      <!-- not you because of: we need to buy you new shoes -->
      <pattern mark_from="1"><token regexp="yes">I|he|we</token><token>new</token></pattern>
      <message>Did you mean <em>knew</em> (past of "to know")?</message>
      <example type="correct">Ah, I <em>knew</em> you would say that.</example>
      <example type="incorrect">Ah, I <em>new</em> you would say that.</example>
   </rule>

   <rule id="PLEASE_NOT_THAT" name="Typo 'please not(note)' that'">
      <pattern mark_from="1" mark_to="-1"><token>please</token><token>not</token><token>that</token></pattern>
      <message>Did you mean <em>note</em>?</message>
      <example type="correct">Please <em>note</em> that saying "Open Source" does not mean very much.</example>
      <example type="incorrect">Please <em>not</em> that saying "Open Source" does not mean very much.</example>
   </rule>

   <rule id="NUT_NOT" name="Confusion of nut/not">
      <pattern mark_to="-1"><token regexp="yes">nut</token><token postag="(RB|JJ|NN)" postag_regexp="yes"/></pattern>
      <message>Did you mean <em>not</em>?</message>
      <example type="correct">I'm <em>not</em> sure.</example>
      <example type="incorrect">I'm <em>nut</em> sure.</example>
   </rule>

   <rule id="AND_SO_ONE" name="Typo 'and so one(on)'">
      <pattern><token>and</token><token>so</token><token>one</token></pattern>
      <message>Did you mean <em>and so on</em> (="etc.")?</message>
      <example type="correct">We think it helps finding bottlenecks <em>and so on</em>.</example>
      <example type="incorrect">We think it helps finding bottlenecks <em>and so one</em>.</example>
   </rule>

   <rule id="THROUGH_AWAY" name="Typo 'through(throw) away'">
      <pattern mark_to="-1"><token>through</token><token>away</token></pattern>
      <message>Did you mean <em>throw</em>?</message>
      <example type="correct">Or we just <em>throw</em> away all bugs.</example>
      <example type="incorrect">Or we just <em>through</em> away all bugs.</example>
   </rule>
	
   <rule id="OR_WAY_IT" name="Typo 'or way(was) it'">
      <pattern mark_from="1" mark_to="-1"><token>or</token><token>way</token><token regexp="yes">(it|that|this)</token></pattern>
      <message>Did you mean <em>was</em>?</message>
      <example type="correct">Or <em>was</em> that a very recent change in Qt?</example>
      <example type="incorrect">Or <em>way</em> that a very recent change in Qt?</example>
   </rule>

   <rule id="DT_RESPONDS" name="Typo 'the/a responds(response)'">
      <pattern mark_from="1"><token postag="DT"/><token>responds</token></pattern>
      <message>Did you mean <em>response</em>?</message>
      <example type="correct">Thanks for the <em>response</em>.</example>
      <example type="incorrect">Thanks for the <em>responds</em>.</example>
   </rule>

   <rule id="THINK_OFF" name="Typo 'think/know off(of)'">
      <pattern mark_from="1"><token regexp="yes">(think|know)</token><token>off</token></pattern>
      <message>Did you mean <em>of</em>?</message>
      <example type="correct">It's the only part of KDE I know <em>of</em> that uses automasking.</example>
      <example type="incorrect">It's the only part of KDE I know <em>off</em> that uses automasking.</example>
   </rule>

   <rule id="NOT_US1" name="Typo 'not us(use)'">
      <pattern mark_from="1"><token>not</token><token>us</token></pattern>
      <message>Did you mean <em>use</em>?</message>
      <example type="correct">Please do not <em>use</em> dispose.</example>
      <example type="incorrect">Please do not <em>us</em> dispose.</example>
   </rule>
	
   <rule id="NOT_US2" name="Typo 'won't/don't us(use)'">
      <pattern mark_from="2"><token>'</token><token>t</token><token>us</token></pattern>
      <message>Did you mean <em>use</em>?</message>
      <example type="correct">Please don't <em>use</em> dispose.</example>
      <example type="incorrect">Please don't <em>us</em> dispose.</example>
   </rule>

   <!-- TODO
   <rule id="VB_TO_USE" name="Past tense of 'used to...'">
      <pattern mark_to="-2"><token postag="VB"/<token>to</token><token>use</token></pattern>
      <message>Use the past tense to build a sentence with "to use".</message>
      <example type="correct">Aethera <em>used</em> to use this.</example>
      <example type="incorrect">Aethera <em>use</em> to use this.</example>
   </rule>
   -->

   <rule id="YOU_THING" name="Typo 'I/you/... thing(think)'">
      <pattern mark_from="1"><token regexp="yes">I|you|he|she|they|we</token><token regexp="yes">thing|things</token></pattern>
      <message>Did you mean <em>think</em> or <em>thinks</em>?</message>
      <example type="correct">I <em>think</em> that's a good idea.</example>
      <example type="incorrect">I <em>thing</em> that's a good idea.</example>
   </rule>

   <rule id="WERE_VBB" name="Confusion of were/where/we">
      <pattern mark_to="-1"><token>were</token><token postag="VB|VBP" postag_regexp="yes"/></pattern>
      <message>Did you mean <em>where</em> or <em>we</em>?</message>
      <example type="correct"><em>We</em> are in the process of implementing this.</example>
      <example type="incorrect"><em>Were</em> are in the process of implementing this.</example>
   </rule>

   <rule id="VBZ_VBD" name="Confusion of it/is">
      <pattern mark_to="-1"><token>is</token><token regexp="yes">was|wasn</token></pattern>
      <message>Did you mean <em>it</em>?</message>
      <example type="correct">...which <em>it</em> wasn't the last day.</example>
      <example type="correct">...which <em>it</em> was the last day.</example>
      <example type="incorrect">...which <em>is</em> wasn't the last day.</example>
      <example type="incorrect">...which <em>is</em> was not the last day.</example>
   </rule>

   <rule id="FORE_DPS" name="Confusion of fore/for">
      <pattern mark_to="-1"><token>fore</token><token postag_regexp="yes" postag="PRP\$"/></pattern>
      <message>Did you mean <em>for</em>?</message>
      <example type="correct">Thanks again <em>for</em> your help.</example>
      <example type="incorrect">Thanks again <em>fore</em> your help.</example>
   </rule>

   <!-- TODO
   <rule id="ADJ_THAT" name="Confusion of that/than">
      <pattern mark_from="1"><token postag="(JJR|JJ)" postag_regexp="yes"> <token>that</token></pattern>
      <message>Did you mean <em>than</em>?</message>
      <example type="correct">I am not wiser <em>than</em> you.</example>
      <example type="incorrect">I am not wiser <em>that</em> you.</example>
   </rule>
   -->

   <rule id="LESS_MORE_THEN" name="Typo 'less/more ... then(than)'">
      <pattern mark_from="2"><token regexp="yes">(less|more)</token><token postag="(JJ|NN|NNS)" postag_regexp="yes"/><token>then</token></pattern>
      <message>Did you mean <em>than</em>?</message>
      <example type="correct">It's less controversial <em>than</em> one would think.</example>
      <example type="incorrect">It's less controversial <em>then</em> one would think.</example>
   </rule>

   <rule id="AND_THAN" name="Typo 'and than(then)'">
      <pattern mark_from="1"><token>and</token><token>than</token></pattern>
      <message>Did you mean <em>then</em>?</message>
      <example type="correct">How to add equal values and <em>then</em> replace them with their sum?</example>
      <example type="incorrect">How to add equal values and <em>than</em> replace them with their sum?</example>
   </rule>

	<!-- FIXME: leaving the old exceptions concept to leave most Rule code intact
		should be fixed to allow POS and string checking for the same element
		see PatternRuleLoader, line 126, 148
	-->
   <rule id="DT_DT" name="Two consecutive articles">
      <pattern mark_from="1"><token postag="DT"><exception regexp="yes">all|half|both|this|each|that</exception></token><token postag="DT"/></pattern>
      <message>Maybe you need to remove the second determiner.</message>
      <example type="correct"><em>The</em> thing is this.</example>
      <example type="incorrect">The <em>a</em> thing is this.</example>
   </rule>
	
   <rule id="RATHER_THEN" name="Typo 'rather then(than)'">
      <pattern mark_from="1"><token>rather</token><token>then</token></pattern>
      <message>Did you mean <em>rather than</em>?</message>
      <example type="correct">Single Clicking rather <em>than</em> Double Clicking</example>
      <example type="incorrect">Single Clicking rather <em>then</em> Double Clicking</example>
   </rule>

   <rule id="OF_CAUSE" name="Typo 'of cause(course)'">
      <pattern mark_to="-1"><token regexp="yes">of</token><token regexp="yes">cause</token><token regexp="yes" negate="yes">(and|to)</token></pattern>
      <message>Did you mean <em>of course</em> (=naturally)?</message>
      <example type="correct">The law of cause and effect.</example>
      <example type="correct"><em>Of course</em> all these things are relative.</example>
      <example type="incorrect"><em>Of cause</em> all these things are relative.</example>
   </rule>

   <rule id="LOOK_ATE" name="Typo 'look ate(at)'">
      <pattern mark_from="1"><token>look</token><token>ate</token></pattern>
      <message>Did you mean <em>at</em>?</message>
      <example type="correct">Although I must admit when I look <em>at</em> the paperback...</example>
      <example type="incorrect">Although I must admit when I look <em>ate</em> the paperback...</example>
   </rule>

   <rule id="A_KNOW_BUG" name="Typo 'a know(known) bug/problem'">
      <pattern mark_from="1" mark_to="-1"><token>a</token><token>know</token><token regexp="yes">bug|problem</token></pattern>
      <message>Did you mean <em>known</em>?</message>
      <example type="correct">This is a <em>known</em> problem.</example>
      <example type="incorrect">This is a <em>know</em> problem.</example>
   </rule>

   <rule id="MY_BE" name="Typo 'my(may) be'">
      <pattern><token>my</token><token>be</token></pattern>
      <message>Did you mean <em>may be</em> or <em>might be</em>?</message>
      <example type="correct">Something that <em>might be</em> interesting...</example>
      <example type="correct">Something that <em>may be</em> interesting...</example>
      <example type="incorrect">Something that <em>my be</em> interesting...</example>
   </rule>

   <rule id="EAGER_TO" name="Infinitive verb with 'eager to...'">
      <pattern mark_from="2"><token>eager</token><token>to</token><token postag="(VBG|VBZ|VBN|VBD)" postag_regexp="yes"/></pattern>
      <message>Use the base form of the verb with <em>eager to</em>.</message>
      <example type="correct">I'd be eager to <em>try</em> out your patch.</example>
      <example type="correct">Bangladesh eager to <em>buy</em> cars from Iran' </example>
      <example type="incorrect">I'd be eager to <em>trying</em> out your patch.</example>
      <example type="incorrect">Bangladesh eager to <em>buying</em> cars from Iran'</example>
      <!-- TODO: not found because of mistagging:
      <example type="incorrect">Bangladesh eager to <em>bought</em> cars from Iran'</example>
      -->
   </rule>

   <rule id="A_MUCH_NN1" name="Superfluous article before 'much'">
      <pattern mark_from="0" mark_to="-1"><token>a</token><token>much</token><token postag="NN"/></pattern>
      <message>You maybe should omit the article <em>a</em>.</message>
      <example type="correct">This will be <em>much</em> work.</example>
      <example type="incorrect">This will be <em>a much</em> work.</example>
   </rule>
	
   <rule id="MOST_SUPERLATIVE" name="No 'more' or 'most' before superlatives">
      <pattern><token regexp="yes">more|most</token><token postag="JJS|RBS" postag_regexp="yes"/></pattern>
      <message>Use only <em>\2</em> (without '\1') when you use the superlative.</message>
      <example type="correct">Kyoto is the <em>oldest</em> city.</example>
      <example type="incorrect">Kyoto is the <em>most oldest</em> city.</example>
   </rule>

   <rule id="THE_SUPERLATIVE" name="No indefinite article ('a'/'an') before superlatives">
      <pattern mark_from="0" mark_to="-1"><token regexp="yes">a|an</token><token postag="JJS|RBS" postag_regexp="yes"><exception>most</exception></token></pattern>
      <message>Use <em>the</em> with the superlative.</message>
      <example type="correct">Kyoto is <em>the</em> oldest city.</example>
      <example type="correct">And Truly It Is <em>a</em> Most Glorious Thing</example>
      <example type="incorrect">Kyoto is <em>an</em> oldest city.</example>
   </rule>

   <rule id="IS_SHOULD" name="Typo 'is(it) should/could'">
      <pattern mark_from="0" mark_to="-1"><token>is</token><token regexp="yes">(should|could)</token></pattern>
      <message>Did you mean <em>it</em>?</message>
      <example type="correct">I definitely think <em>it</em> should be less than four years.</example>
      <example type="incorrect">I definitely think <em>is</em> should be less than four years.</example>
   </rule>

	<rule id="SHOULD_OF_KNOWN" name="Typo 'should of(have) known'">
      <pattern mark_from="1" mark_to="-1"><token>should</token><token>of</token><token>known</token></pattern>
      <message>Did you mean <em>have</em>?</message>
      <example type="correct">I should <em>have</em> known that right from the start.</example>
      <example type="incorrect">I should <em>of</em> known that right from the start.</example>
   </rule>

   <rule id="THE_FLEW" name="Typo 'the flew(flu)'">
      <pattern mark_from="1"><token>the</token><token>flew</token></pattern>
      <message>Did you mean <em>flu</em> (flew is past tense of fly, flu is a viral disease)?</message>
      <example type="correct">I have been out with the <em>flu</em> for the past 3 days.</example>
      <example type="incorrect">I have been out with the <em>flew</em> for the past 3 days.</example>
   </rule>

   <rule id="DID_BASEFORM" name="Infinitive verb after 'did'">
      <pattern mark_from="1"><token regexp="yes">did|will|could|can|should|would|does</token><token postag="(VBD|VBG|VBZ)" postag_regexp="yes"/></pattern>
      <message>'Did' requires base form of verb.</message>
      <!-- 'did' is used for emphasis here: -->
      <example type="correct">They will <em>come</em> home.</example>
      <example type="correct">Peter did <em>go</em> to the cinema.</example>
      <example type="incorrect">Peter did <em>went</em> to the cinema.</example>
      <example type="incorrect">He did <em>walked</em> to his house.</example>
      <example type="incorrect">He did <em>walking</em> to his house.</example>
      <!-- TODO: not found because of mistagging:
      <example type="incorrect">They will <em>comes</em> home.</example>
      <example type="incorrect">He did <em>walks</em> to his house.</example>
      <example type="incorrect">They will <em>came</em> home.</example>
      -->
   </rule>

   <!-- TODO: support rulegroups?
   <rulegroup id="WILL_MIGHT_BASE" name="Infinitive verb after auxiliary verb">
   <rulegroup id="IS_PASSIVE" name="Passive after 'is' and 'was'">
   -->

	<rule id="AS_ADJ_AS" name="Comparison with 'as'">
      <pattern mark_from="2"><token regexp="yes">as</token><token postag="JJ|RB" postag_regexp="yes"/><token regexp="yes">like|than|then</token></pattern>
      <message>Comparison is written "as \2 <em>as</em>".</message>
      <example type="correct">This house is as big <em>as</em> mine.</example>
      <example type="incorrect">This house is as big <em>than</em> mine.</example>
      <example type="correct">This box contains as much <em>as</em> possible.</example>
      <example type="incorrect">This box contains as much <em>like</em> possible.</example>
   </rule>

   <rule id="DT_FORM" name="Confusion of from/form">
      <pattern mark_from="1"><token postag="DT"/><token>from</token></pattern>
      <message>Did you mean <em>form</em>?</message>
      <example type="correct">Type in the <em>form</em> on the web page.</example>
      <example type="incorrect">Type in the <em>from</em> on the web page.</example>
   </rule>

   <rule id="CAN_NOT" name="Typo 'can not' instead of 'cannot'">
      <pattern><token>can</token><token>not</token></pattern>
      <message>Did you mean <em>cannot</em>?</message>
      <example type="correct">You <em>cannot</em> use the keyboard to select an item.</example>
      <example type="incorrect">You <em>can not</em> use the keyboard to select an item.</example>
   </rule>

   <rule id="CANT" name="Typo 'cant' instead of 'can't'">
      <pattern><token>cant</token></pattern>
      <message>Did you mean <em>can't</em> or <em>cannot</em>?</message>
      <example type="correct">I <em>can't</em> view pdf files in Explorer.</example>
      <example type="incorrect">I <em>cant</em> view pdf files in Explorer.</example>
   </rule>

 <!-- TODO: support rulegroup syntax -->
   <!--
   <rulegroup id="COMP_THAN" name="Comparison with 'than'">
   -->

      <!-- 106(less..)+319(more...) in complete BNC, all(?) because "...as" -->
      <rule id="COMP_THAN_1" name="Comparison 'more/less' with 'than'">
         <pattern mark_from="1"><token regexp="yes">more|less</token><token regexp="yes">then|as</token></pattern>
         <message>Comparison requires <em>than</em>, not 'then'.</message>
         <example type="correct">The tagger will return more <em>than</em> one tag.</example>
         <example type="incorrect">The tagger will return more <em>then</em> one tag.</example>
         <example type="triggers_error">Think of it more <em>as</em> activity.</example>
      </rule>

      <rule id="COMP_THAN_2" name="Comparison with 'than'">
         <pattern mark_from="1"><token postag="JJR"/><token regexp="yes">(then|as)</token></pattern>
         <message>Comparison requires <em>than</em>, not 'then'.</message>
         <example type="correct">This house is bigger <em>than</em> mine.</example>
         <example type="incorrect">This house is bigger <em>then</em> mine.</example>
      </rule>

   <!--
   </rulegroup>
   -->

   <!-- FIXME: doesn't work. Either support rulegroup syntax or move out of group... -->
   <rulegroup id="IT_IS" name="Confusion of its/it's">

      <rule>
         <!-- TODO: "its of", "its to" -->
         <pattern mark_from="0" mark_to="-1"><token regexp="yes">its</token><token postag="(CC|DT|IN|MD|POS|PP|RB|WDT|WP|WRB)" postag_regexp="yes"/></pattern>
         <message>Did you mean <em>it's</em> (=<em>it is</em>) instead of 'its' (possessive pronoun)?</message>
         <example type="correct"><em>It's</em> where people walk around.</example>
         <example type="incorrect"><em>Its</em> where people walk around.</example>
         <example type="triggers_error" reason="'every' is tagged as AT0">London is a necropolis, <em>its</em> every corner the site of a murder, its soil a pudding of blood and tears.</example>
      </rule>

      <rule>
         <pattern mark_from="1" mark_to="-1"><token>on</token><token>it</token><token>'</token><token>s</token><token>own</token></pattern>
         <message>Did you mean <em>its</em> (possessive pronoun) instead of 'it's' (=it is)?</message>
         <example type="correct">New Robot Reproduces on <em>Its</em> Own.</example>
         <example type="incorrect">New Robot Reproduces on <em>It's</em> Own.</example>
      </rule>

      <rule>
         <pattern mark_from="2"><token regexp="yes">from|by</token><token>all</token><token>it</token><token>'</token><token>s</token></pattern>
         <message>Did you mean <em>its</em> (possessive pronoun) instead of 'it's' (=it is)?</message>
         <example type="correct">I would still consider assembling it from all <em>its</em> basic components.</example>
         <example type="incorrect">I would still consider assembling it from all <em>it's</em> basic components.</example>
      </rule>

      <rule>
         <pattern mark_to="-1"><token>it</token><token>'</token><token>s</token><token regexp="yes">approach|idea</token></pattern>
         <message>Did you mean <em>its</em> (possessive pronoun) instead of 'it's' (=it is)?</message>
         <example type="correct">We could borrow <em>its</em> approach.</example>
         <example type="incorrect">We could borrow <em>it's</em> approach.</example>
      </rule>

	   <rule>
	      <pattern mark_from="1" mark_to="-1"><token>at</token><token>it</token><token>'</token><token>s</token><token>best</token></pattern>
         <message>Did you mean <em>its</em> (possessive pronoun) instead of 'it's' (=it is)?</message>
	      <example type="correct">Linux at <em>its</em> best</example>
	      <example type="incorrect">Linux at <em>it's</em> best</example>
	   </rule>

      <rule>
         <pattern mark_from="2" mark_to="-1"><token>some</token><token>of</token><token>it</token><token>'</token><token>s</token><token postag="NNS" /></pattern>
         <message>Did you mean <em>its</em> (possessive pronoun) instead of 'it's' (=it is)?</message>
         <example type="correct">When some of <em>its</em> clauses match.</example>
         <example type="incorrect">When some of <em>it's</em> clauses match.</example>
      </rule>

      <rule>
         <pattern mark_from="1" case_sensitive="yes"><token regexp="yes">[Bb]y</token><token>it</token><token>'</token><token>s</token></pattern>
         <message>Did you mean <em>its</em> (possessive pronoun) instead of 'it's' (=it is)?</message>
         <example type="correct">Don't judeg a book by <em>its</em> cover.</example>
         <example type="incorrect">Don't judeg a book by <em>it's</em> cover.</example>
      </rule>

      <!-- TODO:
      <rule>
         <pattern mark_from="0</token>mark_to="-1"><token>its</token><token postag="VBG"/>/pattern>
         <message>Did you mean <em>it's</em> (=<em>it is</em>) instead of 'its' (possessive pronoun)?</message>
         <example type="correct"><em>It's</em> going to be difficult.</example>
         <example type="incorrect"><em>Its</em> going to be difficult.</example>
      </rule>
      -->

      <rule>
         <pattern mark_from="0" mark_to="-1"><token regexp="yes">its</token><token regexp="yes">(a|the)</token></pattern>
         <message>Did you mean <em>it's</em> (=<em>it is</em>) instead of 'its' (possessive pronoun)?</message>
         <example type="correct"><em>It's</em> a good opportunity.</example>
         <example type="incorrect"><em>Its</em> a good opportunity.</example>
         <example type="triggers_error">Currently, there are fifteen records on <em>its</em> A list and twenty on its B list.</example>
      </rule>

   </rulegroup>

<!-- FIXME: doesn't work. Either support rulegroup syntax or move out of group... -->
   <rulegroup id="NOW" name="Confusion of no/now">

      <rule>
         <pattern mark_to="-1"><token regexp="yes">no</token><token postag="MD|VB|VBD|VBN" postag_regexp="yes"><exception>known</exception></token></pattern>
         <message>Did you meam <em>now</em> (=at this moment) instead of
            'no' (negation)?</message>
         <example type="correct">There <em>now</em> will be a park.</example>
         <example type="incorrect">There <em>no</em> will be a park.</example>
      </rule>

      <rule>
         <!-- TODO: "no the", "no of" -->
         <pattern mark_to="-1"><token regexp="yes">no</token><token postag="CC|DT|IN|MD|NP|RP|WDT|WP|WRB" postag_regexp="yes"/></pattern>
         <message>Did you meam <em>now</em> (=at this moment) instead of
            'no' (negation)?</message>
         <example type="correct">There's <em>now</em> a new building.</example>
         <example type="incorrect">There's <em>no</em> a new building.</example>
      </rule>

      <rule>
         <pattern mark_to="-1"><token>no</token><token regexp="yes">were|was|been|be|is</token></pattern>
         <message>Did you meam <em>now</em> (=at this moment) instead of
            'no' (negation)?</message>
         <example type="correct"><em>Now</em> is the right time.</example>
         <example type="incorrect"><em>No</em> is the right time.</example>
      </rule>

   </rulegroup>

					
</rules>
