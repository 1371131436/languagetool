<?xml version="1.0" encoding="utf-8"?>
<!--
        Disambiguation Rules for LanguageTool Copyright (C) 2008
$Id: disambiguation.xml,v 1.31 2011-02-13 12:30:11 milek_pl Exp $
    -->

<!DOCTYPE rules [
        <!ENTITY interp "[\p{Punct}\-–—―„«»…’]+">
        ]>

<rules lang="pl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="../../../../../../../../../languagetool-core/src/main/resources/org/languagetool/resource/disambiguation.xsd">
    <unification feature="number">
        <equivalence type="sg">
            <token postag=".*:sg:.*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="pl">
            <token postag=".*:pl(?:tant)?:.*" postag_regexp="yes"/>
        </equivalence>
    </unification>
    <unification feature="gender">
				<equivalence type="f">
						<token postag=".*[\.:]f[\.:]?.*" postag_regexp="yes"/>
				</equivalence>
				<equivalence type="m1">
						<token postag=".*[\.:]m1[\.:]?.*" postag_regexp="yes"/>
				</equivalence>
				<equivalence type="m2">
						<token postag=".*[\.:]m2[\.:]?.*" postag_regexp="yes"/>
				</equivalence>
				<equivalence type="m3">
						<token postag=".*[\.:]m3[\.:]?.*" postag_regexp="yes"/>
				</equivalence>
				<equivalence type="n1">
						<token postag=".*[\.:]n1[\.:]?.*" postag_regexp="yes"></token>
				</equivalence>
				<equivalence type="n2">
						<token postag=".*[\.:]n2[\.:]?.*" postag_regexp="yes"></token>
				</equivalence>
				<equivalence type="p1">
						<token postag=".*[\.:]p1[\.:]?.*" postag_regexp="yes"></token>
				</equivalence>
				<equivalence type="p2">
						<token postag=".*[\.:]p2[\.:]?.*" postag_regexp="yes"></token>
				</equivalence>
				<equivalence type="p3">
						<token postag=".*[\.:]p3[\.:]?.*" postag_regexp="yes"></token>
				</equivalence>
	</unification>
    <unification feature="case">
        <equivalence type="nom">
            <token postag=".*[\.:]nom[\.:]?.*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="gen">
            <token postag=".*[\.:]gen[\.:]?.*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="dat">
            <token postag=".*[\.:]dat[\.:]?.*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="acc">
            <token postag=".*[\.:]acc[\.:]?.*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="inst">
            <token postag=".*[\.:]inst[\.:]?.*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="loc">
            <token postag=".*[\.:]loc[\.:]?.*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="voc">
            <token postag=".*[\.:]voc[\.:]?.*" postag_regexp="yes"/>
        </equivalence>
    </unification>

    <rule name="opisany powyżej" id="opisany_powyzej">
        <pattern>
            <token inflected="yes" regexp="yes">pisać|opisać|przedstawić|przedstawiać|podać|zamieścić|wymienić</token>
            <marker>
                <token regexp="yes">powyżej|poniżej</token>
            </marker>
        </pattern>
        <disambig postag="adv:pos:aff"/>
    </rule>    
    <rulegroup name="przeszło|ponad + liczba -> kublik" id="przeszlo">
        <rule>
            <pattern>
                <marker>
                    <token regexp="yes">przeszło|ponad</token>
                </marker>
                <token postag="num.*" postag_regexp="yes"/>
            </pattern>
            <disambig postag="qub"/>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token regexp="yes">przeszło|ponad</token>
                </marker>
                <token inflected="yes" regexp="yes">.+letni</token>
            </pattern>
            <disambig postag="qub"/>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token regexp="yes">przeszło|ponad</token>
                </marker>
                <token inflected="yes" regexp="yes">^(pięć|sześć|siedem|osiem|dziewięć|dziesięć|jedenaście|dwanaście|trzynaście|czternaście|piętnaście|szesnaście|siedemnaście|osiemnaście|dziewiętnaście|dwadzieścia|trzydzieści|czterdzieści|pięćdziesiąt|sześćdziesiąt|siedemdziesiąt|osiemdziesiąt|dziewięćdziesiąt|sto|dwieście|trzysta|czterysta|pięćset|sześćset|siedemset|osiemset|dziewięćset|tysiąc|milion|miliard|bilion)</token>
            </pattern>
            <disambig postag="qub"/>
        </rule>
    </rulegroup>
    <rule name="przeszło" id="PRZESZLO">
        <pattern>
            <marker>
                <token>przeszło</token>
            </marker>
            <token regexp="yes">\d+</token>
        </pattern>
        <disambig postag="qub"/>
        <example type="untouched">Przeszło trzydziestu panów pije wódkę.</example>
        <example type="ambiguous" inputform="Przeszło[przejść/verb:praet:sg:n1.n2:ter:perf:nonrefl,przejść/verb:praet:sg:n1.n2:ter:perf:refl,przeszło/qub,przeszły/adja]" outputform="Przeszło[przeszło/qub]"><marker>Przeszło</marker> 30 panów pije wódkę.</example>
    </rule>
    <rule name="prawie/subst -> kublik" id="prawie">
        <pattern>
            <token><exception postag="prep.*inst" postag_regexp="yes"/></token>
            <marker>
                <token>prawie</token>
            </marker>
        </pattern>
        <disambig postag="qub"/>
    </rule>
    <rule name="ciemku" id="ciemku">
        <pattern>
            <marker>
                <token>ciemku</token>
            </marker>
        </pattern>
        <disambig action="add"><wd lemma="po ciemku" pos="adjp">ciemku</wd></disambig>
    </rule>
<!-- 
	<rule name="Nazwy liter" id="AZ">
		<pattern>
			<token><exception inflected="yes">litera</exception></token>
			<marker><token regexp="yes">[A-Za-z]</token></marker>
		</pattern>
		<disambig action="filter" postag="^(?!subst).*$"></disambig>    
		<example type="ambiguous" inputform="i[i/conj,i/interj,i/qub,i/subst:pl:acc:n2,i/subst:pl:dat:n2,i/subst:pl:gen:n2,i/subst:pl:inst:n2,i/subst:pl:loc:n2,i/subst:pl:nom:n2,i/subst:pl:voc:n2,i/subst:sg:acc:n2,i/subst:sg:dat:n2,i/subst:sg:gen:n2,i/subst:sg:inst:n2,i/subst:sg:loc:n2,i/subst:sg:nom:n2,i/subst:sg:voc:n2]" 
		outputform="i[i/conj,i/interj,i/qub]">Ty <marker>i</marker> ja</example>
		<example type="untouched">To litera a jest pierwsza.</example>  
    </rule>
 -->

    <rule name="tym" id="tym">
        <pattern>
            <marker>
                <unify> <feature id="number"/><feature id="gender"/> <feature id="case"/>
                    <token>tym</token>
                    <token postag_regexp="yes" postag="(subst|ger):*"/>
                </unify>
            </marker>
        </pattern>
        <disambig action="unify"/>
    </rule>
        
        <rulegroup name="co (i) rusz" id="CO_RUSZ">
        <rule>
            <pattern >
                <token regexp="yes">co|ani</token>
                <marker>
                    <token>rusz</token>
                </marker>
            </pattern>
            <disambig postag="qub"/>
            <example type="untouched">Rusz tylko tę książkę!</example>
            <example type="ambiguous" inputform="rusz[rusza/subst:pl:gen:f,ruszyć/verb:impt:sg:sec:perf:refl.nonrefl]" outputform="rusz[rusza/qub]">Co <marker>rusz</marker> pyta o godzinę.</example>
        </rule>
        <rule>
            <pattern>
                <token>co</token>
                <token>i</token>
                <marker>
                    <token>rusz</token>
                </marker>
            </pattern>
            <disambig postag="qub"/>
            <example type="untouched">Rusz tylko tę książkę!</example>
            <example type="ambiguous" inputform="rusz[rusza/subst:pl:gen:f,ruszyć/verb:impt:sg:sec:perf:refl.nonrefl]" outputform="rusz[rusza/qub]">Co i <marker>rusz</marker> pyta o godzinę.</example>
        </rule>
    </rulegroup>

    <rule id="A_NUZ" name="a nuż">
        <pattern>
            <marker>
                <token postag="qub">a</token>
                <token postag="qub">nuż</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rulegroup name="bez czarny" id="bez_czarny">
    	<rule>
    		<pattern>
    		<marker>
    			<token>bez</token>
    		</marker>
    			<token>czarny</token>
    		</pattern>
    		<disambig action="filter" postag="subst:sg:(acc|nom):m3"></disambig>
    		<example type="untouched">Proszę kremówkę bez kremu.</example>
    		<example type="ambiguous" inputform="bez[bez/prep:gen:nwok,bez/subst:sg:acc:m3,bez/subst:sg:nom:m3,beza/subst:pl:gen:f]" outputform="bez[bez/subst:sg:acc:m3,bez/subst:sg:nom:m3]">Jaki piękny jest <marker>bez</marker> czarny.</example>
    	</rule>
    	<rule>
    		<pattern>
    		<token>dziki</token>
    		<marker>
    			<token>bez</token>
    		</marker>
    		<token><exception postag_regexp="yes" postag=".*gen.*"></exception></token>
    		</pattern>
    		<disambig action="filter" postag="subst:sg:(acc|nom):m3"></disambig>
    		<example type="untouched">Proszę kremówkę bez kremu.</example>
    		<example type="ambiguous" inputform="bez[bez/prep:gen:nwok,bez/subst:sg:acc:m3,bez/subst:sg:nom:m3,beza/subst:pl:gen:f]" outputform="bez[bez/subst:sg:acc:m3,bez/subst:sg:nom:m3]">Jaki piękny jest dziki <marker>bez</marker>.</example>
    	</rule>
    	<rule>
    		<pattern>
    		<marker>
    			<token>bez</token>
    		</marker>
    		<token postag_regexp="yes" postag=".*gen.*"></token>    		
    		</pattern>    		
    		<disambig postag="prep:gen:nwok"></disambig>
    		<example type="ambiguous" inputform="bez[bez/prep:gen:nwok,bez/subst:sg:acc:m3,bez/subst:sg:nom:m3,beza/subst:pl:gen:f]" outputform="bez[bez/prep:gen:nwok]">Proszę kremówkę <marker>bez</marker> kremu.</example>
    		<example type="untouched">Jaki piękny jest dziki <marker>bez</marker>.</example>
    	</rule>
    </rulegroup>
    
    <rule name="od to nie oda" id="OD_PREP_GEN">
    <pattern>    		
    		<marker>
    			<token>od</token>
    		</marker>
    		<token postag_regexp="yes" postag=".*gen.*"></token>    		
    		</pattern>    		
    		<disambig postag="prep:gen:nwok"></disambig>    
    	<example type="untouched">Od rok 2000 jestem nieruchawy.</example>
    	<example type="ambiguous" inputform="Od[Oda/subst:pl:gen:f,od/prep:gen:nwok,oda/subst:pl:gen:f]" outputform="Od[od/prep:gen:nwok]"><marker>Od</marker> roku 2000 jestem nieruchawy.</example>
    </rule>
    
    <rule name="dzięki czemu" id="dzieki_prep_dat">
    <pattern>    		
    		<marker>
    			<token>dzięki</token>
    		</marker>
    		<token postag_regexp="yes" postag=".*dat.*"></token>    		
    		</pattern>    		
    <disambig postag="prep:dat"></disambig>    
    <example type="untouched">Dzięki, mała!</example>
    <example type="ambiguous" inputform="dzięki[dzięk/subst:pl:acc:m3,dzięk/subst:pl:nom:m3,dzięk/subst:pl:voc:m3,dzięka/subst:pl:acc:f,dzięka/subst:pl:nom:f,dzięka/subst:pl:voc:f,dzięka/subst:sg:gen:f,dzięki/prep:dat,dzięki/subst:pl:acc:p3,dzięki/subst:pl:nom:p3,dzięki/subst:pl:voc:p3]" outputform="dzięki[dzięki/prep:dat]">To wszystko <marker>dzięki</marker> pomocy europejskiej.</example>	
    </rule>
    
    <rule name="MIMO to nie wołacz" id="MIMO_NIE_VOC">
    	<pattern>
    		<token>mimo</token>
    	</pattern>
    	<disambig postag="prep:gen"/>    	
    </rule>
    
    <rule name="ku to nie subst" id="KU_NIE_SUBST">
    	<pattern>
    		<token>ku</token>
    	</pattern>
    	<disambig postag="prep:dat"/>
    </rule>

    <rule name="we to nie subst" id="WE_NIE_SUBST">
        <pattern>
            <token>we</token>
        </pattern>
        <disambig action="remove"><wd lemma="we"/></disambig>
    </rule>

    <rule name="te to nie subst" id="TE_NIE_SUBST">
        <pattern>
            <token>te</token>
        </pattern>
        <disambig action="remove"><wd lemma="te"/></disambig>
    </rule>

    <rule name="gałęzi to nie czasownik" id="GALEZI_SUBST">
      <pattern><token>gałęzi</token></pattern>
      <disambig action="remove"><wd lemma="gałęzić"/></disambig>
    </rule>
    
    <rule name="juszyć" id="JUSZYC">
      <pattern><token inflected="yes">juszyć</token></pattern>
      <disambig action="remove"><wd lemma="juszyć"/></disambig>
    </rule>

    <rule name="niechęcić" id="NIECHECIC">
        <pattern><token inflected="yes">niechęcić</token></pattern>
        <disambig action="remove"><wd lemma="niechęcić"/></disambig>
    </rule>

    <rule name="mniejszy" id="MNIEJSZY">
        <pattern><token>mniejszy</token></pattern>
        <disambig action="remove"><wd lemma="mniejszyć"/></disambig>
    </rule>

    <rule id="LA_PREP_GEN" name="la to nie prep:gen (z Doroszewskiego)">
        <pattern>
            <token>la</token>
        </pattern>
        <disambig action="remove"><wd pos="prep:gen"/></disambig>
    </rule>

    <rule id="O_WYM_" name="O wym -> nie skrót">
        <pattern>
            <token>o</token>
            <marker>
            <token>wym</token>
            </marker>
            <token><exception negate_pos="yes" postag="SENT_END">.</exception></token>
        </pattern>
        <disambig action="remove"><wd pos="brev:pun"/></disambig>
    </rule>

    <rulegroup name="do - prep lub subst" id="DO_PREP_SUBST">
    <rule>
    	<pattern>
			<marker><token>do</token></marker>
			<token>re</token>    	
    	</pattern>
    	<disambig action="filter" postag="subst.*"/>
    </rule>
    <rule>
    	<pattern>
			<marker><token>do</token></marker>
			<token><exception>re</exception></token>    	
    	</pattern>
    	<disambig postag="prep:gen"/>    
    </rule>
    </rulegroup>

    <rule name="do to nie subst" id="do_non_subst">
        <pattern>
            <marker><token>do</token></marker>
            <token postag=".*gen.*" postag_regexp="yes"></token>
        </pattern>
        <disambig action="filter" postag="prep:gen.*"/>
    </rule>

    <rulegroup name="od niedawna" id="OD_NIEDAWNA">
    <rule>
        <pattern>
            <marker>
            <token>od</token>
            </marker>
            <token>niedawna</token>
        </pattern>
        <disambig postag="prep:gen:nwok"/>
    </rule>
    <rule>
            <pattern>
                <token>od</token>
                <marker>
                <token>niedawna</token>
                </marker>
            </pattern>
            <disambig postag="qub"/>
    </rule>
    </rulegroup>

    <rule name="względem - prep lub subst" id="wzgledem_subst">
        <pattern>
            <token>pod</token>
            <token postag=".*inst.*" postag_regexp="yes"/>
            <marker>
                <token>względem</token>
            </marker>
        </pattern>
        <disambig postag="subst:sg:inst:m3"/>
        <example type="ambiguous" inputform="względem[wzgląd/subst:sg:inst:m3,względem/prep:gen]" outputform="względem[wzgląd/subst:sg:inst:m3]">Pod tym <marker>względem</marker> Brazylia jest szczególna.</example>
        <example type="untouched">Nie bądź względem niego taki ostry!</example>
    </rule>
    
    <rule name="godzinę temu" id="temu">
    	<pattern>    		
    		<token regexp="yes" inflected="yes">godzina|rok|miesiąc|tydzień|minuta|chwila|moment|wiek|stulecie</token>
    		<marker><token>temu</token></marker>
    	</pattern>
    	<disambig postag="prep:acc"/>
    	<example type="ambiguous" inputform="temu[temu/prep:acc,ten/adj:sg:dat:m1.m2.m3.n1.n2:pos,to/subst:sg:dat:n2]" outputform="temu[temu/prep:acc]">Było to godzinę <marker>temu</marker>.</example>
    	<example type="untouched">Nie dziwię się temu.</example>
    </rule>
    <rule name="temu to nie prep" id="temu_non_prep">
    	<pattern>
    		<marker><token postag_regexp="yes" postag="adj.*|subst.*">temu</token></marker>
    	</pattern>
    	<disambig action="filter" postag="^(?!prep:acc).*"/>
    	<example type="untouched">To było już godzinę temu.</example>
    	<example type="ambiguous" inputform="temu[temu/prep:acc,ten/adj:sg:dat:m1.m2.m3.n1.n2:pos,to/subst:sg:dat:n2]" outputform="temu[ten/adj:sg:dat:m1.m2.m3.n1.n2:pos,to/subst:sg:dat:n2]">Dziwię się <marker>temu</marker> zachowaniu.</example>
    </rule>     
    
    <rulegroup name="O - dezambiguacja" id="O_brev_interj">
    	<rule>
    		<pattern>
    		<marker><token>o</token></marker>
    		<token regexp="yes">[,!]</token>
    		</pattern>
    		<disambig postag="interj"/>
    		<example type="untouched">O „Gwiazdorze” powiedział coś ciekawego.</example>
    		<example type="ambiguous" inputform="O[o/interj,o/prep:acc,o/prep:loc,ocean/brev:pun,ojciec/brev:pun]" outputform="O[o/interj]"><marker>O</marker>, idzie kościelny!</example>
    	</rule>
    	<rule>
    		<pattern>
    		<marker><token>o</token></marker>
    		<token>.</token>
    		</pattern>
    		<disambig postag="brev:pun"></disambig>
    		<example type="untouched">Porozmawiajmy o literaturze.</example>
    		<example type="ambiguous" inputform="O[o/interj,o/prep:acc,o/prep:loc,ocean/brev:pun,ojciec/brev:pun]" outputform="O[ojciec/brev:pun]"><marker>O</marker>. Pio nie jadał pierogów.</example>
    	</rule>
      <rule>
        <pattern>
        <marker>
        <token postag="prep.*" postag_regexp="yes">o</token>
        </marker>
        <token><exception regexp="yes">.|\p{Lu}\p{Ll}.*</exception></token>
      </pattern>
      <disambig action="filter" postag="^(?!brev:pun|interj).*"/>
      <example type="untouched">To jest o. Pio.</example>
      <example type="ambiguous" inputform="o[o/interj,o/prep:acc,o/prep:loc,ocean/brev:pun,ojciec/brev:pun]" outputform="o[o/prep:acc,o/prep:loc]">Spotykamy się <marker>o</marker> dwunastej</example> 
    </rule>
  </rulegroup>      
    
    <rulegroup name="Na - dezambiguacja" id="na_interj_prep">
      <rule>
        <pattern>
        <marker><token>na</token></marker>
        <token regexp="yes">[,!]|tu</token>
        </pattern>
        <disambig postag="interj"/>
        <example type="untouched">Na Filipinach są gwoździe.</example>
        <example type="ambiguous" inputform="Na[na/interj,na/prep:acc,na/prep:loc]" outputform="Na[na/interj]"><marker>Na</marker>, masz pismo, czytaj.</example>
      </rule>
      <rule>
        <pattern>
        <marker>
        <token postag="prep.*" postag_regexp="yes">na</token>
        </marker>
        <token><exception regexp="yes">[,!]|tu</exception></token>
      </pattern>
      <disambig action="filter" postag="^(?!interj).*"/>
      <example type="untouched">Na tu, piesku</example>
      <example type="ambiguous" inputform="na[na/interj,na/prep:acc,na/prep:loc]" outputform="na[na/prep:acc,na/prep:loc]">Spotykamy się <marker>na</marker> parterze.</example> 
    </rule>
  </rulegroup>

    <rule name="Na wskroś" id="na_wskros_burk">
        <pattern>
            <token>na</token>
            <marker><token regexp="yes">wskr[oó]ś</token></marker>
        </pattern>
        <disambig postag="burk"></disambig>
        <example type="untouched">Szedł wskroś krzewów.</example>
        <example type="ambiguous" inputform="wskroś[wskroś/burk,wskroś/prep:gen]" outputform="wskroś[wskroś/burk]">Przebijał mu na <marker>wskroś</marker> tarczę.</example>
    </rule>

    <rule id="BEZ_MALA" name="Bez mała - adjp, jak w NKJP">
        <pattern>
            <token>bez</token>
            <marker>
            <token>mała</token>
            </marker>
        </pattern>
        <disambig action="replace"><wd pos="adjp" lemma="mały"/></disambig>
        <example type="untouched">Bez małej czarnej nie wstanę.</example>
        <example type="ambiguous" inputform="mała[mała/subst:sg:nom:f,mała/subst:sg:voc:f,mały/adj:sg:nom.voc:f:pos]" outputform="mała[mały/adjp]">Bez <marker>mała</marker> wszyscy to robią.</example>
    </rule>

    <rule id="Z_GRUBA" name="Z gruba (ciosany) - kublik">
        <pattern>
            <token>z</token>
            <marker><token>gruba</token></marker>
        </pattern>
        <disambig postag="qub"/>
        <example type="ambiguous" inputform="gruba[gruba/subst:sg:nom:f,gruba/subst:sg:voc:f,gruby/adj:sg:nom.voc:f:pos]" outputform="gruba[gruba/qub]">Zdaje się z <marker>gruba</marker> ciosany.</example>
        <example type="untouched">Ona jest gruba.</example>
    </rule>
    
    <rule name="głosować przeciw" id="glosowac_przeciw">
    	<pattern>
    		<token regexp="yes" inflected="yes">głosować|wystąpić</token>
    		<marker><token>przeciw</token></marker>
    	</pattern>
    	<disambig postag="prep:dat"/>
    	<example type="untouched">Przeciw się przemocy!</example>
    	<example type="ambiguous" inputform="przeciw[przeciw/prep:dat,przeciwić/verb:impt:sg:sec:imperf:refl]" outputform="przeciw[przeciw/prep:dat]">Głosujemy <marker>przeciw</marker> tej propozycji.</example>
    </rule>

    <rule id="rozdzial_subst" name="Rozdział to rzeczownik">
        <pattern>
            <marker>
                <token regexp="yes">(?:roz)?dział</token>
            </marker>
            <token regexp="yes">\d+|((X{0,2})(V?I{0,3}|I[VX]))(-(X{0,2})(V?I{0,3}|I[VX]))?</token>
        </pattern>
        <disambig action="remove"><wd pos="verb:praet:sg:m1.m2.m3:ter:perf:refl.nonrefl"/></disambig>
        <example type="untouched">Rozdział się pospiesznie.</example>
        <example type="ambiguous" inputform="Rozdział[rozdziać/verb:praet:sg:m1.m2.m3:ter:perf:refl.nonrefl,rozdział/subst:sg:acc:m3,rozdział/subst:sg:nom:m3]" outputform="Rozdział[rozdział/subst:sg:acc:m3,rozdział/subst:sg:nom:m3]"><marker>Rozdział</marker> XXIV</example>
    </rule>

    <rulegroup id="rozdzial_dzial_subst" name="Rozdział i dział to rzeczowniki">
    <rule>
        <pattern>
            <marker>
                <unify>
                  <feature id="gender"/><feature id="case"/><feature id="number"/>
                    <token regexp="yes">(?:roz|po|prze|u)?dział</token>
                    <token postag_regexp="yes" postag="adj.*"/>
                </unify>
            </marker>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Rozdział się pospiesznie.</example>
        <example type="ambiguous" inputform="Rozdział[rozdziać/verb:praet:sg:m1.m2.m3:ter:perf:refl.nonrefl,rozdział/subst:sg:acc:m3,rozdział/subst:sg:nom:m3]" outputform="Rozdział[rozdział/subst:sg:acc:m3,rozdział/subst:sg:nom:m3]"><marker>Rozdział</marker> pierwszy</example>
    </rule>
        <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="gender"/><feature id="case"/><feature id="number"/>
                        <token postag_regexp="yes" postag="adj.*"/>
                        <token regexp="yes">(?:roz|po|prze|u)?dział</token>
                    </unify>
                </marker>
            </pattern>
            <disambig action="unify"/>
            <example type="untouched">Rozdział się pospiesznie.</example>
            <example type="ambiguous" inputform="rozdział[rozdziać/verb:praet:sg:m1.m2.m3:ter:perf:refl.nonrefl,rozdział/subst:sg:acc:m3,rozdział/subst:sg:nom:m3]" outputform="rozdział[rozdział/subst:sg:acc:m3,rozdział/subst:sg:nom:m3]">Pierwszy <marker>rozdział</marker> opisuje przyrodę Kaukazu.</example>
        </rule>
    </rulegroup>


    <rule id="INF_MUSZA" name="Muszą jako czasownik">
        <pattern>
            <token postag="verb:inf.*" postag_regexp="yes"/>
            <marker><token>muszą</token></marker>
        </pattern>
        <disambig postag="verb:fin:pl:ter:imperf:nonrefl"/>
        <example type="untouched">Zabawiał się muszą nóżką.</example>
        <example type="ambiguous" inputform="muszą[musieć/verb:fin:pl:ter:imperf:nonrefl,musić/verb:fin:pl:ter:imperf:refl.nonrefl,musza/subst:sg:inst:f,muszy/adj:sg:acc:f:pos,muszy/adj:sg:inst:f:pos]" outputform="muszą[musieć/verb:fin:pl:ter:imperf:nonrefl]">Oni zarabiać <marker>muszą</marker>.</example>
    </rule>

    <rule id="INF_MUSZA_2" name="Muszą jako czasownik">
        <pattern>
            <marker><token>muszą</token></marker>
            <token postag="verb:inf.*" postag_regexp="yes"/>
        </pattern>
        <disambig postag="verb:fin:pl:ter:imperf:nonrefl"/>
        <example type="untouched">Zabawiał się muszą nóżką.</example>
        <example type="ambiguous" inputform="muszą[musieć/verb:fin:pl:ter:imperf:nonrefl,musić/verb:fin:pl:ter:imperf:refl.nonrefl,musza/subst:sg:inst:f,muszy/adj:sg:acc:f:pos,muszy/adj:sg:inst:f:pos]" outputform="muszą[musieć/verb:fin:pl:ter:imperf:nonrefl]">Oni <marker>muszą</marker> zarabiać.</example>
    </rule>

    <rule id="WALESA" name="Wałęsa to nazwisko">
        <pattern case_sensitive="yes">
            <token>Wałęsa<exception scope="previous" postag="SENT_END"/></token>
        </pattern>
        <disambig action="replace"><wd pos="subst:sg:nom:m1" lemma="Wałęsa"/></disambig>
        <example type="ambiguous" inputform="Wałęsa[&lt;/S&gt;,Wałęsa/subst:sg:nom:m1,wałęsa/subst:sg:nom:m1,wałęsać/verb:fin:sg:ter:imperf:refl]" outputform="Wałęsa[&lt;/S&gt;,Wałęsa/subst:sg:nom:m1]">Lech <marker>Wałęsa</marker></example>
    </rule>

    <rule id="MIESZKA" name="Mieszka to dopełniacz od Mieszko">
        <pattern case_sensitive="yes">
            <token>Mieszka<exception scope="previous" postag="SENT_END"/></token>
        </pattern>
        <disambig action="filter" postag="subst:sg:.*:m1"/>
        <example type="ambiguous" inputform="Mieszka[Mieszko/subst:sg:acc:m1,Mieszko/subst:sg:gen:m1,mieszek/subst:sg:gen:m3,mieszkać/verb:fin:sg:ter:imperf:nonrefl]"
                 outputform="Mieszka[Mieszko/subst:sg:acc:m1,Mieszko/subst:sg:gen:m1]">
            W tym samym roku władca Polski przywołał z węgierskiego wygnania swego bratanka <marker>Mieszka</marker> Bolesławowica.</example>
    </rule>


    <rule id="SWOJE_LATA" name="Swoje lata -> rzeczownik">
        <pattern>
            <token postag="adj:pl.*" postag_regexp="yes" regexp="yes">pierwsze|swoje|ostatnie|młode</token>
            <token postag="subst:pl.*" postag_regexp="yes">lata</token>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="PETA" name="te pęta - nie czasownik">
        <pattern>
            <unify>
                <feature id="case"/><feature id="number"/>
                <feature id="gender"/>
            <token postag="adj.*" postag_regexp="yes"/>
            <token postag="subst.*" postag_regexp="yes">pęta</token>
            </unify>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">On zwierzęta pęta.</example>
        <example type="ambiguous" inputform="pęta[pęta/subst:pl:acc:p3,pęta/subst:pl:nom:p3,pęta/subst:pl:voc:p3,pętać/verb:fin:sg:ter:imperf:refl,pętać/verb:fin:sg:ter:imperf:refl.nonrefl,pęto/subst:pl:acc:n2,pęto/subst:pl:nom:n2,pęto/subst:pl:voc:n2,pęto/subst:sg:gen:n2]"
                 outputform="pęta[pęta/subst:pl:acc:p3,pęta/subst:pl:nom:p3,pęta/subst:pl:voc:p3,pęto/subst:pl:acc:n2,pęto/subst:pl:nom:n2,pęto/subst:pl:voc:n2,pęto/subst:sg:gen:n2]">Do czego służą te <marker>pęta</marker>?</example>
    </rule>

    <rule id="ON_ONA_MA" name="Ona/on ma...">
        <pattern>
            <token regexp="yes" postag="ppron3.*" postag_regexp="yes">ona?</token>
            <token postag="verb:fin:sg:ter:imperf:refl.nonrefl">ma</token>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="SIEC_ROZLEGLA" name="sieć rozległa > nie czasownik">
        <pattern>
            <token postag="subst:sg:nom:f">sieć</token>
            <token postag="adj:sg:nom.voc:f:pos">rozległa</token>
        </pattern>
        <disambig action="filterall"></disambig>
    </rule>

    <rule id="DZISIAJ_GOSCI" name="dzisiaj gości">
        <pattern>
            <marker>
                <token>dzisiaj</token>
            </marker>
            <token>gości</token>
        </pattern>
        <disambig postag="adv"/>
    </rule>

    <rule id="STARA_ADJ" name="stara to przymiotnik przed rzeczownikiem r. ż.">
        <pattern>
            <token postag="adj:sg:nom.voc:f:pos">stara</token>
            <token postag="subst:sg:nom:f"/>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="NOWE_MYSLI" name="myśli to rzeczownik">
        <pattern>
            <token postag="adj.*" postag_regexp="yes">nowe</token>
            <token postag="subst.*" postag_regexp="yes">myśli</token>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="JE_JESC" name="„je” jako forma „jeść”">
        <pattern>
            <token regexp="yes">zupę|danie|pizzę|mięso|loda</token>
            <marker>
                <token>je</token>
            </marker>
        </pattern>
        <disambig postag="verb:fin:sg:ter:imperf:refl.nonrefl"></disambig>
    </rule>

    <rulegroup id="JE_PPRON" name="„je” jako zaimek">
        <rule>
            <pattern>
                <token postag="verb.*" postag_regexp="yes"/>
                <marker><token>je</token></marker>
            </pattern>
            <disambig action="filter" postag="ppron3.*"></disambig>
            <example type="ambiguous" inputform="je[jeść/verb:fin:sg:ter:imperf:refl.nonrefl,on/ppron3:pl:acc:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:npraep,on/ppron3:sg:acc:n1.n2:ter:akc.nakc:npraep]"
                     outputform="je[on/ppron3:pl:acc:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:npraep,on/ppron3:sg:acc:n1.n2:ter:akc.nakc:npraep]">Łączy <marker>je</marker> postać tajemniczej Melindy.</example>
        </rule>
        <rule>
            <pattern>
                <marker><token>je</token></marker>
                <token postag="verb.*" postag_regexp="yes"/>
            </pattern>
            <disambig action="filter" postag="ppron3.*"/>
            <example type="ambiguous" inputform="je[jeść/verb:fin:sg:ter:imperf:refl.nonrefl,on/ppron3:pl:acc:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:npraep,on/ppron3:sg:acc:n1.n2:ter:akc.nakc:npraep]"
                     outputform="je[on/ppron3:pl:acc:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:npraep,on/ppron3:sg:acc:n1.n2:ter:akc.nakc:npraep]">On <marker>je</marker> lubi.</example>
        </rule>
    </rulegroup>

    <rule id="DOSYC" name="dosyć nie jako dosycić">
        <pattern>
            <marker>
                <token postag="qub">dosyć</token>
                <token postag="(?:adj|ger|subst).*gen.*" postag_regexp="yes"/>
            </marker>
        </pattern>
        <disambig action="filterall" postag=".*gen.*"/>
        <example type="untouched">Mam wiele do zrobienia.</example>
        <example type="ambiguous" inputform="ludzi[człowiek/subst:pl:acc:m1,człowiek/subst:pl:gen:m1,ludzie/subst:pl:acc:p1,ludzie/subst:pl:gen:p1]" outputform="ludzi[człowiek/subst:pl:gen:m1,ludzie/subst:pl:gen:p1]">Tu było dosyć <marker>ludzi</marker>.</example>
    </rule>


    <rule id="NUM_SUBST_GEN" name="gen po num">
        <pattern>
            <marker>
                <token postag="(?:num|subst):.*" postag_regexp="yes" regexp="yes">dużo|mało|mnóstwo|parę|trochę|część|niewiele|wiele</token>
                <token postag="(?:adj|ger|subst).*gen.*" postag_regexp="yes"/>
            </marker>
        </pattern>
        <disambig action="filterall" postag=".*gen.*"/>
        <example type="untouched">Mam wiele do zrobienia.</example>
        <example type="ambiguous" inputform="ludzi[człowiek/subst:pl:acc:m1,człowiek/subst:pl:gen:m1,ludzie/subst:pl:acc:p1,ludzie/subst:pl:gen:p1]" outputform="ludzi[człowiek/subst:pl:gen:m1,ludzie/subst:pl:gen:p1]">Tu było mnóstwo <marker>ludzi</marker>.</example>
    </rule>

    <rule id="NUM_CONGR" name="liczebnik ze związkiem zgody">
        <pattern>
            <unify>
                <feature id="case"/><feature id="number"/><feature id="gender"/>
                <token postag="num.*:congr" postag_regexp="yes"/>
                <token postag="(subst|adj|pact|ppas).*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Chyba nie chcesz, żebyśmy się rozdziały przy ludziach?</example>
        <example type="ambiguous" inputform="rozdziały[rozdziać/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:perf:refl.nonrefl,rozdział/subst:pl:acc:m3,rozdział/subst:pl:nom:m3,rozdział/subst:pl:voc:m3]"
                 outputform="rozdziały[rozdział/subst:pl:acc:m3,rozdział/subst:pl:nom:m3,rozdział/subst:pl:voc:m3]">Dwa <marker>rozdziały</marker> książki.</example>
    </rule>

    <rule id="NAPOJ" name="napój + przymiotnik -> rzeczownik">
        <pattern>
            <marker>
            <unify>
                <feature id="number"/><feature id="gender"/><feature id="case"/>
                    <token>napój</token>
                     <token postag="(adj|pact).*" postag_regexp="yes"/>
            </unify>
            </marker>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Napój swojego konia!</example>
        <example type="ambiguous" inputform="Napój[napoić/verb:impt:sg:sec:perf:refl.nonrefl,napój/subst:sg:acc:m3,napój/subst:sg:nom:m3]" outputform="Napój[napój/subst:sg:acc:m3,napój/subst:sg:nom:m3]"><marker>Napój</marker> miłosny</example>
    </rule>

    <rulegroup name="prep + czasownik -> ~ czasownik" id="prep_verb">
        <!--  przyimki zawsze z tym samym przypadkiem --> 
        <rule>
            <pattern>
                <!--
                <token regexp="yes">[uwz]|[pd]o|ode?|oprócz|dla|(:?po)?między|(:po)?nade?|na|ze|przede?|pode?|podczas|(:?po)?mimo|(:?po)?przez|pośrodku</token>
                -->
                <token postag="prep:[^\.]+" postag_regexp="yes"><exception>co</exception></token>
                <marker>
                    <and>
                        <token><match no="0" postag_regexp="yes" postag="prep:(.*)" postag_replace="(ad[jv]|subst|ppron):[^ ]*$1[^ ]*" setpos="yes"/></token>
                        <token postag="verb.*" postag_regexp="yes"/>
                    </and>
                </marker>
            </pattern>
            <disambig action="filter" postag="adj.*|adv.*|subst.*|ppron.*"/>
            <example type="untouched">Tu mamy piękny przykład sztuki barokowej.</example>
            <example type="ambiguous" inputform="mamy[mama/subst:pl:acc:f,mama/subst:pl:nom:f,mama/subst:pl:voc:f,mama/subst:sg:gen:f,mieć/verb:fin:pl:pri:imperf:refl.nonrefl]" outputform="mamy[mama/subst:pl:acc:f,mama/subst:pl:nom:f,mama/subst:pl:voc:f,mama/subst:sg:gen:f]">Spotykaliśmy się u <marker>mamy</marker>.</example>
        </rule>

        <!--  inne przyimki 
        <rule>
            <pattern>
                <!- -
                <token regexp="yes">[uwz]|[pd]o|ode?|oprócz|dla|(:?po)?między|(:po)?nade?|na|ze|przede?|pode?|podczas|(:?po)?mimo|(:?po)?przez|pośrodku</token>
                - ->
                <token postag="prep:.*" postag_regexp="yes"><exception postag="prep:[^\.]+" postag_regexp="yes"/><exception>co</exception></token>
                <marker>
                    <and>
                        <token><match no="0" postag_regexp="yes" postag="prep:(.*)" postag_replace="(ad[jv]|subst|ppron):$1" setpos="yes"/></token>
                        <token postag="verb.*" postag_regexp="yes"/>
                    </and>
                </marker>
            </pattern>
            <disambig action="filter" postag="adj.*|adv.*|subst.*|ppron.*"/>
            <example type="untouched">Tu mamy piękny przykład sztuki barokowej.</example>
            <example type="ambiguous" inputform="mamy[mama/subst:pl:acc:f,mama/subst:pl:nom:f,mama/subst:pl:voc:f,mama/subst:sg:gen:f,mieć/verb:fin:pl:pri:imperf:refl.nonrefl]" outputform="mamy[mama/subst:pl:acc:f,mama/subst:pl:nom:f,mama/subst:pl:voc:f,mama/subst:sg:gen:f]">Stanąłem naprzeciw <marker>mamy</marker>.</example>
        </rule>        
        -->
       <rule>
       	<pattern>
       		<unify>
       			<feature id="case"/>
       			<token postag="prep:.*" postag_regexp="yes"><exception postag="prep.*" negate_pos="yes" postag_regexp="yes"/></token>       			
                <token postag_regexp="yes" postag="(adj|subst|ppron).*"><exception>pewne</exception></token>
       		</unify>
       	</pattern>
       	<disambig action="unify"/>
       	<example type="untouched">Oni mną papiery.</example>
       	<example type="ambiguous" inputform="mną[ja/ppron12:sg:inst:m1.m2.m3.f.n1.n2:pri,miąć/verb:fin:pl:ter:imperf:refl.nonrefl]" outputform="mną[ja/ppron12:sg:inst:m1.m2.m3.f.n1.n2:pri]">Jedź ze <marker>mną</marker>!</example>
       </rule>
    </rulegroup>

    <rule id="MNIE" name="mnie to nie miąć; bardzo ostra reguła, ale praktycznie nie zdarza się w uzusie...">
        <pattern>
            <marker><token postag="verb:fin:sg:ter:imperf:refl.nonrefl">mnie</token></marker>
        </pattern>
        <disambig action="filter" postag="ppron12.*"/>
    </rule>

    <rule id="PO_ADJP" name="po polsku">
        <pattern>
            <token>po</token>
            <token postag="adjp"/>
        </pattern>
        <disambig postag="prep:loc"/>
    </rule>

    <rule id="OBOK_ADV" name="eliminacja obok:prep">
        <pattern>
            <marker>
                <token regexp="yes">obok|wokół</token>
            </marker>
            <token regexp="yes">[,.;]</token>
        </pattern>
        <disambig postag="adv"/>
    </rule>

    <rulegroup id="MAJA_ONE_1" name="czasownik pl + one - zaimek">
        <rule>
            <pattern>
                <token postag="verb.*pl.*:ter.*" postag_regexp="yes"/>
                <token postag="ppron3:pl:nom:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:praep.npraep">one</token>
            </pattern>
            <disambig action="filterall"/>
            <example type="ambiguous" inputform="one[on/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,on/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos,on/ppron3:pl:nom:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:praep.npraep]"
                     outputform="one[on/ppron3:pl:nom:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:praep.npraep]">Mają <marker>one</marker> niemałe znaczenie.
            </example>
        </rule>
        <rule>
            <pattern>
                <token postag="ppron3:pl:nom:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:praep.npraep">one</token>
                <token postag="verb.*pl.*:ter.*" postag_regexp="yes"/>
            </pattern>
            <disambig action="filterall"/>
        </rule>
    </rulegroup>

    <rule id="verb_adjverb_adj" name="czasownik + czasownik/adv -> adv">
        <pattern>
            <token postag_regexp="yes" postag="verb:.*"/>
            <marker>
                <and>
                    <token postag="verb.*" postag_regexp="yes"><exception postag_regexp="yes" postag="(?:ger|prep).*"/><exception postag="verb.*inf" postag_regexp="yes"/><exception>wręcz</exception></token>
                    <token postag="adv.*" postag_regexp="yes"/>
                </and>
            </marker>
        </pattern>
        <disambig action="filter" postag="adv.*"/>
        <example type="ambiguous" inputform="śmiało[śmiać/verb:praet:sg:n1.n2:ter:imperf:refl,śmiało/adv:pos,śmiały/adja,śmieć/verb:praet:sg:n1.n2:ter:imperf:nonrefl]"
                 outputform="śmiało[śmiało/adv:pos]">Chodź <marker>śmiało</marker>.</example>
        <example type="untouched">Zaczęła wręcz nawoływać do utworzenia wspólnej listy.</example>
    </rule>

    <rule name="W wiek" id="w_wiek">
			<pattern case_sensitive="yes">
			<token regexp="yes">((X{0,2})(V?I{0,3}|I[VX]))(-(X{0,2})(V?I{0,3}|I[VX]))?<exception postag="SENT_START"/><exception>-</exception></token>
			<marker><token>w</token></marker>
			<token>.</token>
			</pattern>
			<disambig postag="brev:pun"/>
			<example type="ambiguous" inputform="w[w/prep:acc:nwok,w/prep:loc:nwok,wiek/brev:pun]" outputform="w[wiek/brev:pun]">Dziwny był ten XX <marker>w</marker>.</example>
            <example type="ambiguous" inputform="w[w/prep:acc:nwok,w/prep:loc:nwok,wiek/brev:pun]" outputform="w[wiek/brev:pun]">Polska w opiniach obcych X-XII <marker>w</marker>.</example>
			<example type="untouched">Mam to w szufladzie.</example>
	</rule>
    <rule id="w_wiek_II" name="W w. XX">
        <pattern case_sensitive="yes">
            <marker><token>w</token></marker>
            <token>.</token>
            <token regexp="yes">((X{0,2})(V?I{0,3}|I[VX]))(-(X{0,2})(V?I{0,3}|I[VX]))?<exception postag="SENT_START"/><exception>-</exception></token>
        </pattern>
        <disambig postag="brev:pun"/>
        <example type="ambiguous" inputform="w[w/prep:acc:nwok,w/prep:loc:nwok,wiek/brev:pun]" outputform="w[wiek/brev:pun]">To było w <marker>w</marker>. XX.</example>
    </rule>
    <rule name="W wat" id="W_wat">
        <pattern case_sensitive="yes">
            <token regexp="yes">\d+</token>
            <marker><token>W</token></marker>
        </pattern>
        <disambig postag="brev:npun"/>
        <example type="untouched">Dużo wody jest w szklance.</example>
        <example type="untouched">To było w XIX w.</example>
        <example type="ambiguous" inputform="W[w/prep:acc:nwok,w/prep:loc:nwok,wat/brev:npun,wiek/brev:pun]" outputform="W[wat/brev:npun]">Te głośniki mają moc 20 <marker>W</marker>.</example>
    </rule>
	<rule name="W prep" id="w_prep">
			<pattern>
				<token postag_regexp="yes" postag="prep:(acc|loc):nwok">w</token>
			</pattern>
			<disambig action="filter" postag="^(?!brev:n?pun).*"/>
			<example type="ambiguous" inputform="w[w/prep:acc:nwok,w/prep:loc:nwok,wiek/brev:pun]" outputform="w[w/prep:acc:nwok,w/prep:loc:nwok]">Mam to <marker>w</marker> szufladzie.</example>
			<example type="untouched">Dziwny XIX w.</example>
	</rule>

    <rule id="PREP_LADA_QUB" name="lada jako kublik">
        <pattern>
            <token postag="prep.*" postag_regexp="yes"><exception postag="prep:nom.*" postag_regexp="yes"/></token>
            <marker>
                <token>lada</token>
            </marker>
        </pattern>
        <disambig postag="qub"/>
        <example type="ambiguous" inputform="lada[lada/prep:nom,lada/qub,lada/subst:sg:nom:f]"
                 outputform="lada[lada/qub]">Rozmawiali o <marker>lada</marker> błahostce.</example>
    </rule>

    <rule id="LADA_CO" name="lada co jako kublik">
        <pattern>
            <token postag="qub">lada</token>
            <token postag="subst.*" postag_regexp="yes" inflected="yes">co</token>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="lada[lada/prep:nom,lada/qub,lada/subst:sg:nom:f]"
                 outputform="lada[lada/qub]">Zajmują się <marker>lada</marker> czym.</example>
    </rule>

    <rule id="SKLADAC_DZIEKI" name="składać dzięki > nie prep">
        <pattern>
            <token inflected="yes">składać</token>
            <marker><token>dzięki</token></marker>
        </pattern>
        <disambig action="filter" postag="subst:pl:acc:p3"/>
    </rule>

    <rule id="ZONA_KAPITANA" name="żona kapitana > to nie nom.">
        <pattern>
            <token inflected="yes">żona</token>
            <marker>
                <token>kapitana</token>
            </marker>
        </pattern>
        <disambig postag="subst:sg:gen:m1"/>
        <example type="untouched">W porcie stoi kapitana.</example>
        <example type="ambiguous" inputform="kapitana[kapitan/subst:sg:acc:m1,kapitan/subst:sg:gen:m1,kapitana/subst:sg:nom:f]"
                 outputform="kapitana[kapitan/subst:sg:gen:m1]">Czy jest żoną <marker>kapitana</marker>?</example>
    </rule>

    <rule id="PRZYRODA_SINGULARE_TANTUM" name="Przyrody to raczej singulare">
        <pattern>
            <token>przyrody</token>
        </pattern>
        <disambig postag="subst:sg:gen:f"/>
        <example type="ambiguous" inputform="przyrody[przyroda/subst:pl:acc:f,przyroda/subst:pl:nom:f,przyroda/subst:pl:voc:f,przyroda/subst:sg:gen:f]"
                outputform="przyrody[przyroda/subst:sg:gen:f]">To pomnik <marker>przyrody</marker>.</example>
    </rule>

    <rule id="MIMO_ACC" name="Mimo z biernikiem">
        <pattern>
            <marker>
                <token>mimo</token>
            </marker>
            <token postag=".*acc.*" postag_regexp="yes"><exception postag=".*gen.*" postag_regexp="yes"></exception></token>
        </pattern>
        <disambig postag="prep:acc"/>
    </rule>

    <rulegroup name="Przyimek z rzeczownikiem" id="PREP_SUBST">
    <rule>
        <pattern>
            <unify> <feature id="case"/>
                <token postag="prep.*" postag_regexp="yes"><exception postag="prep.*" negate_pos="yes" postag_regexp="yes"/><exception>co</exception></token>
                <token postag="(adj|subst|ppron.*|ppas|pact):.*" postag_regexp="yes"><exception>co</exception><exception postag="qub"/></token>
            </unify>
        </pattern>
        <disambig action="unify"/>        
        <example type="untouched">Tu mamy piękny przykład.</example>
        <example type="untouched">Łaciny używamy na co dzień.</example>        
        <!-- example type="ambiguous" inputform="mamy[mama/subst:pl:acc:f,mama/subst:pl:nom:f,mama/subst:pl:voc:f,mama/subst:sg:gen:f]" outputform="mamy[mama/subst:sg:gen:f]">Idę do <marker>mamy</marker>.</example>  -->
    </rule>
    <rule>
        <pattern>
            <unify> <feature id="case"/>
                <token postag="prep.*" postag_regexp="yes"><exception postag="prep.*|brev.*" negate_pos="yes" postag_regexp="yes"/><exception>co</exception></token>
                <token inflected="yes">to</token>
            </unify>
        </pattern>
        <disambig action="unify"></disambig>
        <example type="untouched">Tu mamy piękny przykład.</example>
        <example type="untouched">Łaciny używamy na co dzień.</example>
                        
        <!-- example type="ambiguous" inputform="mamy[mama/subst:pl:acc:f,mama/subst:pl:nom:f,mama/subst:pl:voc:f,mama/subst:sg:gen:f]" outputform="mamy[mama/subst:sg:gen:f]">Idę do <marker>mamy</marker>.</example>  -->
    </rule>    
    <rule>
        <pattern>
            <unify> <feature id="case"/>
                <token regexp="yes">przeciw|poza|około</token>
                <token postag="(adj|subst|ger|ppron.*|ppas|pact):.*" postag_regexp="yes"><exception>co</exception><exception postag="qub"/></token>
            </unify>
        </pattern>
        <disambig action="unify"></disambig>
        <example type="untouched">Tu mamy piękny przykład.</example>
        <example type="untouched">Łaciny używamy na co dzień.</example>
        <example type="ambiguous" inputform="krzywdzie[krzywda/subst:sg:dat:f,krzywda/subst:sg:loc:f]" 
        	outputform="krzywdzie[krzywda/subst:sg:dat:f]">Występuję przeciw <marker>krzywdzie</marker>.</example>                
    </rule>    
    <rule>
    	<pattern>
    		<marker><token regexp="yes">jako?|a|niż|niczym</token></marker> <!-- jeśli a, jak, jako, niczym, niż nie występuje z mianownikiem, to nie jest przyimkiem -->
    		<token postag="subst:.*" postag_regexp="yes"><exception postag=".*nom.*|conj|adv.*" postag_regexp="yes"></exception><exception regexp="yes">.*um</exception></token>
    	</pattern>
    	<disambig><match no="1" postag="^(?!prep:nom).*" postag_regexp="yes"></match></disambig> 
    	<example type="untouched">Mówię dziś jako rzecznik samorządu przedszkolnego.</example>
    	<example type="ambiguous" inputform="jako[jaka/subst:sg:voc:f,jako/adv,jako/conj,jako/prep:nom]" outputform="jako[jaka/subst:sg:voc:f,jako/adv,jako/conj]">Można to określić <marker>jako</marker> ewolucję.</example>
    </rule>
	</rulegroup>

    <rule id="W_CZASIE_GEN" name="W czasie + rzeczownik -> genetivus">
        <pattern>
            <token>w</token>
            <token>czasie</token>
            <marker>
                <token postag_regexp="yes" postag="(adj|subst|ger|ppron.*|ppas|pact).*gen.*"/>
            </marker>
        </pattern>
        <disambig action="filter" postag=".*gen.*"></disambig>
        <example type="untouched">Uwielbiam podroże w czasie.</example>
        <example type="ambiguous" inputform="zimy[zima/subst:pl:acc:f,zima/subst:pl:nom:f,zima/subst:pl:voc:f,zima/subst:sg:gen:f]" outputform="zimy[zima/subst:sg:gen:f]">W czasie <marker>zimy</marker> niedźwiedzie piją Coca-Colę.</example>
    </rule>

    <rule id="NIE_MA_GEN" name="nie ma + dopełniacz">
        <pattern>
            <token>nie</token>
            <marker>
                <token postag="verb:fin:sg:ter:imperf:refl.nonrefl">ma</token>
                <token postag=".*gen.*" postag_regexp="yes"/>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="braterstwa[braterstwo/subst:pl:acc:n2,braterstwo/subst:pl:acc:p1,braterstwo/subst:pl:gen:p1,braterstwo/subst:pl:nom:n2,braterstwo/subst:pl:voc:n2,braterstwo/subst:sg:gen:n2]"
                 outputform="braterstwa[braterstwo/subst:pl:gen:p1,braterstwo/subst:sg:gen:n2]">Nie ma <marker>braterstwa</marker>.</example>
    </rule>

    <rule id="SWOJA_INST" name="swoją > adj">
        <pattern>
            <unify>
                <feature id="case"/><feature id="number"/><feature id="gender"/>
                <token>swoją</token>
                <token postag="(?:adj|pact|ppas|subst).*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="swoją[swoić/verb:fin:pl:ter:imperf:refl.nonrefl,swój/adj:sg:acc:f:pos,swój/adj:sg:inst:f:pos]"
                 outputform="swoją[swój/adj:sg:acc:f:pos]">Mam tu <marker>swoją</marker> teorię.</example>
    </rule>

    <rule id="SWOJA_2" name="swoją to nie swoić">
        <pattern>
            <token postag="verb:fin:pl:ter:imperf:refl.nonrefl">swoją</token>
        </pattern>
        <disambig action="remove"><wd lemma="swoić"/></disambig>
    </rule>

    <rule id="OCZY" name="oczy to nie oczyć">
        <pattern>
            <token>oczy</token>
        </pattern>
        <disambig action="remove"><wd lemma="oczyć"/></disambig>
    </rule>

    <rule id="CHECI" name="chęci to nie chęcić">
        <pattern>
            <token>chęci</token>
        </pattern>
        <disambig action="remove"><wd lemma="chęcić"/></disambig>
    </rule>

    <rule id="JESIENIA" name="jesienią to nie jesienić">
        <pattern>
            <token>jesienią</token>
        </pattern>
        <disambig action="remove"><wd lemma="jesienić"/></disambig>
    </rule>

    <rule id="SLABI" name="słabi to nie słabić">
        <pattern>
            <token>słabi</token>
        </pattern>
        <disambig action="remove"><wd lemma="słabić"/></disambig>
    </rule>

    <rule id="BOZY" name="boży to nie bożyć">
        <pattern>
            <token>boży</token>
        </pattern>
        <disambig action="remove"><wd lemma="bożyć"/></disambig>
    </rule>

    <rule id="CISZY" name="ciszy to nie ciszyć">
        <pattern>
            <token>ciszy</token>
        </pattern>
        <disambig action="remove"><wd lemma="ciszyć"/></disambig>
    </rule>

    <rule id="SLONI" name="słoni to nie słonić">
        <pattern>
            <token>słoni</token>
        </pattern>
        <disambig action="remove"><wd lemma="słonić"/></disambig>
    </rule>

    <rule id="SMOKA" name="smoka to nie smokać">
        <pattern>
            <token>smoka</token>
        </pattern>
        <disambig action="remove"><wd lemma="smokać"/></disambig>
    </rule>

    <rule id="STALI" name="stali to nie stalić">
        <pattern>
            <token>stali</token>
        </pattern>
        <disambig action="remove"><wd lemma="stalić"/></disambig>
    </rule>

    <rule id="SWIEZY" name="świeży to nie świeżyć">
        <pattern>
            <token>świeży</token>
        </pattern>
        <disambig action="remove"><wd lemma="świeżyć"/></disambig>
    </rule>

    <rule id="BRACI" name="braci to nie bracić">
        <pattern>
            <token>braci</token>
        </pattern>
        <disambig action="remove"><wd lemma="bracić"/></disambig>
    </rule>

    <rule id="WYBRZEZA" name="wybrzeża to nie wybrzeżać">
        <pattern>
            <token>wybrzeża</token>
        </pattern>
        <disambig action="remove"><wd lemma="wybrzeżać"/></disambig>
    </rule>

    <rule id="KLESKA" name="klęska to nie klęskać">
        <pattern>
            <token>klęska</token>
        </pattern>
        <disambig action="remove"><wd lemma="klęskać"/></disambig>
    </rule>

    <rule id="KORALI" name="korali to nie koralić">
        <pattern>
            <token>korali</token>
        </pattern>
        <disambig action="remove"><wd lemma="koralić"/></disambig>
    </rule>

    <rule id="KALI" name="Kali to nie kalić">
        <pattern case_sensitive="yes">
            <token>Kali</token>
        </pattern>
        <disambig action="remove"><wd lemma="kalić"/></disambig>
    </rule>

    <rule id="WARTA" name="warta to nie wartać">
        <pattern>
            <token>warta</token>
        </pattern>
        <disambig action="remove"><wd lemma="wartać"/></disambig>
    </rule>

    <rule id="WILGOCI" name="wilgoci to nie wilgocić">
        <pattern>
            <token>wilgoci</token>
        </pattern>
        <disambig action="remove"><wd lemma="wilgocić"/></disambig>
    </rule>

    <rule name="swój to nie swoić" id="SWOJ">
        <pattern>
            <token inflected="yes">swój</token>
        </pattern>
        <disambig action="remove"><wd lemma="swoić"/></disambig>
    </rule>

    <rule id="WIELKI_SWOJ_ADJ" name="wielki, swój to nie rzeczownik">
        <pattern>
            <token inflected="yes" regexp="yes">wielki|swój</token>
        </pattern>
        <disambig action="filter" postag="adj.*"/>
    </rule>

    <rule id="PIEKNY_ADJ" name="piękny to nie rzeczownik">
        <pattern>
            <token inflected="yes">piękny</token>
        </pattern>
        <disambig action="filter" postag="adj.*"/>
    </rule>

    <rule id="SWIECI" name="święci garnki -> nie czasownik">
        <pattern>
            <marker><token>święci</token></marker>
            <token>garnki</token>
            <token>lepią</token>
        </pattern>
        <disambig postag="subst:pl:nom:m1"/>
        <example type="ambiguous" inputform="święci[święcić/verb:fin:sg:ter:imperf:refl.nonrefl,święty/adj:pl:nom.voc:m1.p1:pos,święty/subst:pl:nom:m1,święty/subst:pl:voc:m1]"
                 outputform="święci[święty/subst:pl:nom:m1]">Nie <marker>święci</marker> garnki lepią.</example>

    </rule>

    <rule id="BRONI_SUBST" name="broni jako genetiwus">
        <pattern>
            <token regexp="yes" inflected="yes">zawieszenie|nierozprzestrzenianie|braterstwo|posiadać|użyć|towarzysz|noszenie|dostawa|rodzaj|magazyn|eksport</token>
            <marker><token>broni</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:f"/>
    </rule>
    
    <rule id="CIAZY_SUBST" name="ciąży jako genetiwus">
        <pattern>
            <token regexp="yes" inflected="yes">zakończenie|przerywanie|trymestr|zaawansowany|niechciany|niepożądany|zapobiegać|nieślubny|miesiąc|patologia|tydzień|okres</token>
            <marker><token>ciąży</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:f"></disambig>
    </rule>


    <rule id="ZIELENI_SUBST" name="zieleni jako genetiwus">
        <pattern>
            <token regexp="yes" inflected="yes">architektura|pas|oaza|odcień|pielęgnacja|pasmo|skrawek|zarząd|teren|klin|enklawa|aranżacja|zakład|kępa|skupisko|architekt|wydział|pracownik|plama|kawałek</token>
            <marker><token>zieleni</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:f"></disambig>
    </rule>

    <rule id="SOLI_SUBST" name="soli jako genetiwus">
        <pattern>
            <token regexp="yes" inflected="yes">szczypta|kopalnia|warzelnia|łyżeczka|słup|baryłka|roztwór|kryształek|beczka|łyżka|pokład|tona|kilo|odrobina|spożycie|kryształ|grudka</token>
            <marker><token>soli</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:f"></disambig>
        <example type="ambiguous" inputform="soli[sol/subst:pl:gen:m2,sola/subst:pl:gen:f,sola/subst:sg:dat:f,sola/subst:sg:gen:f,sola/subst:sg:loc:f,solić/verb:fin:sg:ter:imperf:refl.nonrefl,sól/subst:pl:gen:f,sól/subst:sg:dat:f,sól/subst:sg:gen:f,sól/subst:sg:loc:f,sól/subst:sg:voc:f]"
                 outputform="soli[sól/subst:sg:gen:f]">Mam szczyptę <marker>soli</marker>.</example>
    </rule>

    <rulegroup id="PRZYJAZNI_SUBST" name="przyjaźni jako genetiwus">
        <rule>
        <pattern>
            <token regexp="yes" inflected="yes">order|wyraz|pomnik|towarzystwo|więź|pakt|deklaracja|dowód|atmosfera|symbol|manifestacja|osiedle|szlak</token>
            <marker><token>przyjaźni</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:f"></disambig>
    </rule>
    </rulegroup>

    <rule id="BYLA_INST" name="była + przymiotnik/czasownik w narzędniku">
        <pattern>
            <token postag="verb:praet:sg:f:ter:imperf:nonrefl">była</token>
            <token postag_regexp="yes" postag="(?:adj|ppas|subst):sg:inst:f.*"/>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rulegroup id="PARA" name="para jako rzeczownik">
        <rule>
            <pattern>
                <marker>
                <token postag="adj:sg:nom.voc:f:pos"/>
                <token postag="subst:sg:nom:f">para</token>
                </marker>
            </pattern>
            <disambig action="filterall"/>
            <example type="ambiguous" inputform="para[par/subst:sg:acc:m1,par/subst:sg:gen:m1,para/subst:sg:nom:f,parać/verb:fin:sg:ter:imperf:refl]"
                     outputform="para[para/subst:sg:nom:f]">Wiwat młoda <marker>para</marker>!</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token postag="subst:sg:nom:f">para</token>
                </marker>
                    <token postag="adj:sg:nom.voc:f:pos">wodna</token>
            </pattern>
            <disambig action="filterall"/>
        </rule>
    </rulegroup>

    <rulegroup id="NASZA_ADJ" name="nasza jako przymotnik">
    <rule>
        <pattern>
            <token postag="subst:sg:nom:f"/>
            <token postag="adj:sg:nom.voc:f:pos">nasza</token>
        </pattern>
        <disambig action="filterall"/>
    </rule>
    <rule>
        <pattern>
            <token postag="adj:sg:nom.voc:f:pos">nasza</token>
             <token postag="subst:sg:nom:f"/>
            </pattern>
       <disambig action="filterall"/>
    </rule>
        <rule>
            <pattern>
                <token postag="adj:sg:nom.voc:f:pos">nasza</token>
                <token postag="adj:sg:nom.voc:f:pos"/>
                <token postag="subst:sg:nom:f"/>
            </pattern>
            <disambig action="filterall"/>
        </rule>
    </rulegroup>

    <rule id="MOJE" name="moje to nie „moja” ani „moje” plurale tantum">
        <pattern>
            <token>moje</token>
        </pattern>
        <disambig action="filter" postag="adj.*"/>
    </rule>

    <rule id="ZWYKLY_ADJ" name="zwykły to przymiotnik przed rzeczownikiem">
        <pattern>
            <unify>
                <feature id="case"/><feature id="gender"/><feature id="number"/>
                <token>zwykły</token>
                <token postag="subst.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="zwykły[zwyknąć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:perf:nonrefl,zwykły/adj:sg:acc:m3:pos,zwykły/adj:sg:nom.voc:m1.m2.m3:pos]"
                 outputform="zwykły[zwykły/adj:sg:acc:m3:pos,zwykły/adj:sg:nom.voc:m1.m2.m3:pos]">Toż to <marker>zwykły</marker> oportunizm.</example>
        <example type="untouched">Tak to zwykły czynić puchacze.</example>
    </rule>

    <rule id="ZWYKLY_INF" name="zwykły jako czasownik">
        <pattern>
            <marker><token>zwykły</token></marker>
            <token postag="verb:inf.*" postag_regexp="yes"/>
        </pattern>
        <disambig postag="verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:perf:nonrefl"/>
        <example type="ambiguous" inputform="zwykły[zwyknąć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:perf:nonrefl,zwykły/adj:sg:acc:m3:pos,zwykły/adj:sg:nom.voc:m1.m2.m3:pos]"
                 outputform="zwykły[zwyknąć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:perf:nonrefl]">Policjantki <marker>zwykły</marker> oznaczać swój teren.</example>
        <example type="untouched">To zwykły bandyta.</example>
    </rule>

    <rule id="DZIALY" name="te działy">
        <pattern>
            <unify>
                <feature id="case"/><feature id="number"/> <feature id="gender"/>
                <token postag="adj.*" postag_regexp="yes"/>
                <token regexp="yes">(?:roz)?działy</token>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="działy[dziać/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:refl,dziać/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:refl.nonrefl,dział/subst:pl:acc:m3,dział/subst:pl:nom:m3,dział/subst:pl:voc:m3]"
                 outputform="działy[dział/subst:pl:acc:m3,dział/subst:pl:nom:m3,dział/subst:pl:voc:m3]">Oba te <marker>działy</marker> poezji zrodziły się z bólu.</example>
    </rule>

    <rule id="JEDNA_Z_GEN" name="„jedna z” -> przymiotnik">
        <pattern>
            <marker><token>jedna</token></marker>
            <token skip="1">z</token>
            <token postag="adj:pl:gen.*f.*|num:pl:gen.*|subst:pl:gen:f" postag_regexp="yes"/>
        </pattern>
        <disambig postag="adj:sg:nom.voc:f:pos"/>
        <example type="ambiguous" inputform="jedna[jeden/adj:sg:nom.voc:f:pos,jednać/verb:fin:sg:ter:imperf:refl.nonrefl]"
                 outputform="jedna[jeden/adj:sg:nom.voc:f:pos]">Jest to <marker>jedna</marker> z najpiękniejszych dziewic na świecie.</example>
        <example type="untouched">Tyran jedna się z narodem.</example>
    </rule>

    <rule id="GO" name="go to nie rzeczownik">
        <pattern>
            <token>go<exception scope="previous">w</exception><exception scope="previous" postag="SENT_START"></exception></token>
        </pattern>
        <disambig action="remove"><wd lemma="go"/></disambig>
        <example type="ambiguous" inputform="go[go/subst:pl:acc:n2,go/subst:pl:dat:n2,go/subst:pl:gen:n2,go/subst:pl:inst:n2,go/subst:pl:loc:n2,go/subst:pl:nom:n2,go/subst:pl:voc:n2,go/subst:sg:acc:n2,go/subst:sg:dat:n2,go/subst:sg:gen:n2,go/subst:sg:inst:n2,go/subst:sg:loc:n2,go/subst:sg:nom:n2,go/subst:sg:voc:n2,on/ppron3:sg:acc:m1.m2.m3:ter:nakc:npraep,on/ppron3:sg:gen:m1.m2.m3:ter:nakc:npraep,on/ppron3:sg:gen:n1.n2:ter:nakc:npraep]"
                 outputform="go[on/ppron3:sg:acc:m1.m2.m3:ter:nakc:npraep,on/ppron3:sg:gen:m1.m2.m3:ter:nakc:npraep,on/ppron3:sg:gen:n1.n2:ter:nakc:npraep]">Widziałem <marker>go</marker> w lesie.</example>
    </rule>

    <rule id="GRA_W_GO" name="go jako rzeczownik">
        <pattern>
            <token>w</token>
            <marker><token>go</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="on"/></disambig>
        <example type="ambiguous" inputform="go[go/subst:pl:acc:n2,go/subst:pl:loc:n2,go/subst:sg:acc:n2,go/subst:sg:loc:n2,on/ppron3:sg:acc:m1.m2.m3:ter:nakc:npraep]"
                 outputform="go[go/subst:pl:acc:n2,go/subst:pl:loc:n2,go/subst:sg:acc:n2,go/subst:sg:loc:n2]">Gram w <marker>go</marker>.</example>
    </rule>

    <rule id="ZBYT_ADV" name="zbyt jako przysłówek">
        <pattern>
            <unify negate="yes">
                <feature id="case"></feature><feature id="gender"></feature>
                <feature id="number"/>
                <token postag="adv">zbyt</token>
                <token postag="(adj|ppas|pact).*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="TO_NIE_CONJ" name="to jako ten">
        <pattern>
            <unify>
                <feature id="gender"></feature><feature id="case"/><feature id="number"/>
                <token postag="adj:sg.*" postag_regexp="yes">to<exception scope="previous" regexp="yes">&interp;</exception><exception scope="previous" postag="SENT_START"/></token>
                <token postag="subst:sg.*" postag_regexp="yes"><exception>co</exception></token>
            </unify>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="to[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]"
                 outputform="to[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos]">Wróć <marker>to</marker> wesele myśli.</example>
        <example type="untouched">Wróć, to wesele ci się spodoba.</example>
    </rule>

    <rulegroup id="BRATA_SUBST" name="„brata” itp. jako rzeczownik">
        <rule>
            <pattern>
                <token inflected="yes" postag="verb:.*(sg|pl).*|verb:imps.*|pcon:imperf.*|pant:perf.*" postag_regexp="yes" skip="-1">mieć<exception scope="current">miano</exception><exception postag="SENT_END|&lt;ELLIPSIS&gt;|comp|conj" postag_regexp="yes" scope="next"/><exception scope="next" regexp="yes">&interp;</exception></token>
                <marker>
                    <token regexp="yes">bąka|brata|broni|czerwieni|ciąży|lata|myśli|niewoli|soli|towarzyszy|troska|zieleni|zwierza|przyjaźni|gości|wieści|złości|(?:roz|po|prze|u)?dział|zbroją</token>
                </marker>
            </pattern>
            <disambig action="filter" postag="subst.*"/>
        </rule>
        <rule>
        <pattern>
            <token postag="verb:.*(sg|pl).*|verb:imps.*|pcon:imperf.*|pant:perf.*" postag_regexp="yes" skip="-1"><exception postag="subst:.*|adj.*|ppron.*|verb:inf.*|verb:bedzie.*|adv:com|prep.*|qub|adv.*|conj|comp|&lt;/TO_(ZNACZY|JEST)&gt;" postag_regexp="yes" scope="current"></exception><exception scope="current">może</exception><exception postag="SENT_END|&lt;ELLIPSIS&gt;|interp:comma|comp|conj" postag_regexp="yes" scope="next"/><exception scope="next" regexp="yes">&interp;</exception></token>
            <marker>
                <token regexp="yes">bąka|brata|broni|ciąży|czerwieni|lata|myśli|niewoli|soli|troska|towarzyszy|zieleni|zwierza|przyjaźni|gości|wieści|złości|(?:roz|po|prze|u)?dział|zbroją</token>
            </marker>
        </pattern>
        <disambig action="filter" postag="subst.*"/>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token skip="-1" regexp="yes">bąka|brata|czerwieni|lata|broni|ciąży|myśli|niewoli|soli|troska|towarzyszy|zieleni|zwierza|przyjaźni|gości|wieści|(?:roz|po|prze|u)?dział|zbroją<exception postag="SENT_END|&lt;ELLIPSIS&gt;|interp:comma|comp|conj" postag_regexp="yes" scope="next"/><exception scope="next" regexp="yes">&interp;</exception></token>
                </marker>
                <token postag="verb:.*(sg|pl).*|verb:imps.*|pcon:imperf.*|pant:perf.*" postag_regexp="yes"><exception postag="subst:.*|adj.*|ppron.*|verb:inf.*|verb:bedzie.*|adv:com|prep.*|qub|adv.*|conj|comp|&lt;/TO_(ZNACZY|JEST)&gt;" postag_regexp="yes" scope="current"/><exception scope="current">może</exception></token>
            </pattern>
            <disambig action="filter" postag="subst.*"/>
            <example type="ambiguous" inputform="bąka[bąk/subst:sg:acc:m2,bąk/subst:sg:gen:m2,bąkać/verb:fin:sg:ter:imperf:nonrefl]"
                     outputform="bąka[bąk/subst:sg:acc:m2,bąk/subst:sg:gen:m2]">Drukarz <marker>bąka</marker> uciął.</example>
        </rule>
    </rulegroup>

    <rule id="PREPARE_NOM_ACC_F" name="przygotowanie szukanie orzeczenia dla r. żeńskiego">
        <pattern>
            <marker>
                <unify>
                    <feature id="case"/><feature id="number"/><feature id="gender"/>
                    <token postag="(pact|ppas|adj).*acc.*:f.*" postag_regexp="yes"><exception postag="conj"/></token>
                    <token postag="(subst|adj).*acc.*:f.*" postag_regexp="yes"><exception postag="verb.*" postag_regexp="yes"/></token>
                </unify>
            </marker>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="straż[straż/subst:sg:acc:f,straż/subst:sg:nom:f]" outputform="straż[straż/subst:sg:acc:f]">Trzeba było zrobić tak zwaną <marker>straż</marker> broni.</example>
    </rule>
    
    <!-- rule>
        <pattern>
            <token></token>
        </pattern>
        <disambig></disambig>
    </rule -->

    <rulegroup id="SUBST_NOM_VOC_VERB" name="potencjalne orzeczenie">
     <rule>
        <pattern>
            <marker>
            <unify>
                <feature id="number"/><feature id="gender"/>
                <token postag="subst.*nom.*" postag_regexp="yes"><exception postag="verb:winien:.*" postag_regexp="yes"/><exception regexp="yes">[tj]aki</exception></token>
                <token postag="verb:(?:praet|pot):.*ter.*" postag_regexp="yes"/>
            </unify>
            </marker>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="miały[miał/subst:pl:acc:m3,miał/subst:pl:nom:m3,miał/subst:pl:voc:m3,mieć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:refl.nonrefl]"
                  outputform="miały[mieć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:refl.nonrefl]">Wczoraj kobiety <marker>miały</marker> dużo pracy.</example>
    </rule>
    <rule>
        <pattern case_sensitive="yes">
            <marker>
            <unify>
                <feature id="number"/>
                <token postag="subst.*nom.*" postag_regexp="yes"><exception postag="verb:winien:.*" postag_regexp="yes"/><exception scope="previous" regexp="yes">był[ao]?</exception></token>
                <token postag="verb:fin:.*ter.*" postag_regexp="yes"><exception>je</exception><exception>mnie</exception><exception>nasza</exception></token>
            </unify>
            </marker>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="stanowi[stan/subst:sg:dat:m3,stanowić/verb:fin:sg:ter:imperf:refl.nonrefl,stanowy/adj:pl:nom.voc:m1.p1:pos]" outputform="stanowi[stanowić/verb:fin:sg:ter:imperf:refl.nonrefl]">To, co <marker>stanowi</marker> treść ich wyobraźni ma charakter intersubiektywny i postrzegalny także przez innych.</example>
        <example type="untouched">A to był kostur pastuszy.</example>
        <example type="untouched">Trzeba było odbyć tak zwaną straż broni.</example>
    </rule>
    </rulegroup>

    <!-- now not that greedy :) -->
    <rulegroup name="unifikacja przymiotnika z rzeczownikiem" id="unify_adj_subst">
        <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="number"/><feature id="gender"/> <feature id="case"/>
                        <token max="2" postag="adj.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(adj|subst).*"/></token>
                        <token postag="(subst|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="subst.*"/></token>
                    </unify>
                </marker>
            </pattern>
            <disambig action="unify"/>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <unify> <feature id="number"/><feature id="gender"/> <feature id="case"/>
                        <token postag="(subst|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="subst.*"/></token>
                        <token postag="adj.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="adj.*"/></token>
                    </unify>
                </marker>
                <token><exception postag="(subst|ger).*" postag_regexp="yes"/></token>
            </pattern>
            <disambig action="unify"/>
        </rule>
        <rule>
            <pattern>
                <unify>
                    <feature id="number"/><feature id="gender"/> <feature id="case"/>
                    <token postag="pact.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="pact.*"/></token>
                    <token postag="(subst|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="subst.*"/></token>
                </unify>
            </pattern>
            <disambig action="unify"/>
        </rule>
        <rule>
            <pattern>
                <unify> <feature id="number"/><feature id="gender"/> <feature id="case"/>
                    <token postag="(subst|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="subst.*"/></token>
                    <token postag="pact.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="pact.*"/></token>
                </unify>
            </pattern>
            <disambig action="unify"/>
        </rule>
        <rule>
            <pattern>
                <unify>
                    <feature id="number"/><feature id="gender"/> <feature id="case"/>
                    <token>jedna</token>
                    <token postag="(subst|ger|adj).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="subst.*|adj.*"/></token>
                </unify>
            </pattern>
            <disambig action="unify"/>
            <example type="untouched">On jedna sobie tłumy.</example>
            <example type="ambiguous" inputform="jedna[jeden/adj:sg:nom.voc:f:pos,jednać/verb:fin:sg:ter:imperf:refl.nonrefl]" outputform="jedna[jeden/adj:sg:nom.voc:f:pos]">To jest <marker>jedna</marker> osoba.</example>
            <example type="ambiguous" inputform="jedna[jeden/adj:sg:nom.voc:f:pos,jednać/verb:fin:sg:ter:imperf:refl.nonrefl]" outputform="jedna[jeden/adj:sg:nom.voc:f:pos]">To jest ta <marker>jedna</marker> jedyna.</example>
        </rule>
    </rulegroup>

  <!-- specjalnie robimy to drugi raz... to jest kaskada! -->
    <rule name="Przyimek z rzeczownikiem po unifikacji" id="PREP_SUBST_2">    
        <pattern>
            <unify> <feature id="case"/>
                <token postag="prep.*" postag_regexp="yes"><exception postag="prep.*" negate_pos="yes" postag_regexp="yes"/><exception>co</exception></token>
                <token postag="(adj|subst|ppron.*|ppas|pact):.*" postag_regexp="yes"><exception>co</exception><exception postag="qub"/></token>
            </unify>
        </pattern>
        <disambig action="unify"/>        
        <example type="untouched">Tu mamy piękny przykład.</example>
        <example type="untouched">Łaciny używamy na co dzień.</example>        
        <!-- example type="ambiguous" inputform="mamy[mama/subst:pl:acc:f,mama/subst:pl:nom:f,mama/subst:pl:voc:f,mama/subst:sg:gen:f]" outputform="mamy[mama/subst:sg:gen:f]">Idę do <marker>mamy</marker>.</example>  -->
    </rule>

    <rule name="mają to nie maić" id="MAJA_MAIC">
        <pattern>
            <token>mają</token>
        </pattern>
        <disambig action="filter"><match no="1">mieć</match></disambig>
        <example type="untouched">Oni mieli robaki.</example>
        <example type="ambiguous" inputform="mają[maić/verb:fin:pl:ter:imperf:refl.nonrefl,maja/subst:sg:inst:f,mieć/verb:fin:pl:ter:imperf:refl.nonrefl]" outputform="mają[mieć/verb:fin:pl:ter:imperf:refl.nonrefl]">Oni <marker>mają</marker> robaki.</example>
    </rule>

    <!-- rule name="kobiety miały" id="MIALY">
        <pattern>
            <marker>
                <unify>
                    <feature id="gender"/><feature id="number"/>
                        <token postag="subst.*" postag_regexp="yes"/>
                        <token>miały</token>
                </unify>
            </marker>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="miały[miał/subst:pl:acc:m3,miał/subst:pl:nom:m3,miał/subst:pl:voc:m3,mieć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:refl.nonrefl]"
                 outputform="miały[mieć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:refl.nonrefl]">Wczoraj kobiety <marker>miały</marker> dużo pracy.</example>
    </rule -->

    <rule name="śmiało jako adv" id="SMIALO_ADV">
        <pattern>
            <marker><token>śmiało</token></marker>
            <token postag="verb.*" postag_regexp="yes"/>
        </pattern>
        <disambig postag="adv:pos"/>
    </rule>

    <rule name="sporo to nie spora" id="SPORO">
        <pattern>
            <token>sporo</token>
        </pattern>
        <disambig action="filter" postag="adv:pos:aff"/>
    </rule>

    <rule name="jaki by -> by jako kublik" id="JAKI_BY_TU">
        <pattern>
            <token inflected="yes">jaki</token>
            <marker>
                <token>by</token>
            </marker>
        </pattern>
        <disambig postag="qub"/>
        <example type="ambiguous" inputform="by[by/comp,by/qub]" outputform="by[by/qub]">Natychmiast kombinował, jaki <marker>by</marker> tu numer wykręcić zapraszającemu.</example>
        <example type="untouched">Użył narzędzia, jakiego, by użyć tu mocnego określenia, nie powinien był używać.</example>
    </rule>

    <rule name="wiele by jeszcze" id="WIELE_BY_JESZCZE">
        <pattern>
            <token>wiele</token>
            <marker><token>by</token></marker>
            <token>jeszcze</token>
        </pattern>
        <disambig postag="qub"/>
        <example type="ambiguous" inputform="by[by/comp,by/qub]" outputform="by[by/qub]">Ciekawa to była figura i wiele <marker>by</marker> jeszcze o niej gadać.</example>
        <example type="untouched">Dałbym wiele, by jeszcze móc ją zobaczyć.</example>
    </rule>

    <rule name="predykatyw + by > kublik" id="PRED_BY">
        <pattern>
            <token postag_regexp="yes" postag="pred|verb:winien.*"/>
            <marker><token>by</token></marker>
        </pattern>
        <disambig postag="qub"/>
        <example type="ambiguous" inputform="by[by/comp,by/qub]" outputform="by[by/qub]">Oni powinni <marker>by</marker> to zrobić.</example>
        <example type="untouched">Ale nie w poprzek, jak powinna, by zagrodzić drogę nadjeżdżającej dziewczynie.</example>
    </rule>

    <rule name="nie na początku zdania" id="NIE_ADAMP">
        <pattern>
            <token postag="SENT_START"/>
            <marker>
                <token>nie</token>
            </marker>
        </pattern>
        <disambig postag="qub"/>
    </rule>

    <rulegroup name="chcąc nie chcąc" id="chcac-nie-chcac">
        <rule>
            <pattern>
                <marker>
                    <token skip="1">chcąc</token>
                </marker>
                <token>nie<exception scope="previous" regexp="yes" negate="yes">,|chcąc</exception></token>
                <token>chcąc</token>
            </pattern>
            <disambig postag="qub"/>
        </rule>
        <rule>
            <pattern>
                <token skip="1">chcąc</token>
                <token>nie<exception scope="previous" regexp="yes" negate="yes">,|chcąc</exception></token>
                <marker>
                    <token>chcąc</token>
                </marker>
            </pattern>
            <disambig postag="qub"/>
        </rule>
    </rulegroup>

    <rule name="nawiasem mówiąc" id="nawiasem-mowiac">
        <pattern>
            <token regexp="yes">nawiasem|krótko|prawdę|ściśle</token>
            <marker>
                <token>mówiąc</token>
            </marker>
        </pattern>
        <disambig postag="qub"/>
    </rule>

    <rule name="oklep" id="na-oklep">
        <pattern>
            <token>na</token>
            <marker>
                <token regexp="yes">oklep|oślep</token>
            </marker>
        </pattern>
        <disambig postag="qub">
        </disambig>
    </rule>

    <rulegroup name="chybił trafił" id="chybil-trafil">
        <rule>
            <pattern>
                <token>na</token>
                <marker>
                    <token>chybił</token>
                </marker>
            </pattern>
            <disambig postag="qub"/>
        </rule>
        <rule>
            <pattern>
                <token>na</token>
                <token>chybił</token>
                <marker>
                    <token>trafił</token>
                </marker>
            </pattern>
            <disambig postag="qub"/>
        </rule>
    </rulegroup>

    <rule name="obok, dookoła, wewnątrz -> adv" id="obok">
        <pattern>
            <marker>
                <token regexp="yes">obok|dookoła|wewnątrz</token>
            </marker>
            <token postag="subst:.*" postag_regexp="yes"><exception postag="subst:.*gen.*" postag_regexp="yes"/></token>
        </pattern>
        <disambig postag="adv:pos"/>
    </rule>

    <rulegroup name="mam -> subst" id="mam">
        <rule>
            <pattern>
                <token postag="prep:.*gen.*" postag_regexp="yes"/>
                <marker>
                    <token>mam</token>
                </marker>
            </pattern>
            <disambig action="filter"><match no="2" postag="subst:pl:.*" postag_regexp="yes"/></disambig>
        </rule>
    </rulegroup>

    <rule name="miał + inf -> verb" id="mial">
        <pattern>
            <marker>
                <token>miał</token>
            </marker>
            <token postag_regexp="yes" postag="verb:inf.*"/>
        </pattern>
        <disambig action="filter" postag="verb.*"/>
    </rule>

    <!-- TODO: oznakować tak jak rzeczownik po skrócie -->
    <rule name="dr, mgr + . => qub" id="dr_mgr_kropka">
        <pattern>
            <marker>
                <token regexp="yes">dr|mgr|nr|kmdr|kmdt|arcybp|bp|abp|gen|ul</token>
            </marker>
            <token>.</token>
        </pattern>
        <disambig postag="qub"/>
    </rule>

    <rulegroup name="lecz" id="lecz">
        <rule>
            <pattern>
                <marker>
                    <token>lecz</token>
                </marker>
                <token>się</token>
                <token>sam</token>
                <token regexp="yes">[\.!,-—…]+</token>
            </pattern>
            <disambig action="filter" postag="verb:impt.*"/>
        </rule>
        <rule>
            <pattern>
                <token>,</token>
                <marker>
                    <token>lecz</token>
                </marker>
            </pattern>
            <disambig postag="conj"/>
        </rule>
    </rulegroup>

<!-- 
    <rule name="wzgledem" id="względem">
        <pattern>
            <marker>
                <token>względem<exception scope="previous">pod</exception></token>
            </marker>
            <token postag_regexp="yes" postag=".*[:\.]gen[:\.].*"/>
        </pattern>
        <disambig action="add"><wd lemma="względem" pos="prep:gen">względem</wd></disambig>
        <example type="untouched">Tu mamy piękny przykład pod względem architektury.</example>
        <example type="ambiguous" inputform="względem[wzgląd/subst:sg:inst:m3,względem/prep:gen]" outputform="względem[wzgląd/subst:sg:inst:m3,względem/prep:gen]">Tu mamy piękny przykład, <marker>względem</marker> którego nie będziemy się kierować.</example>
    </rule>
 -->
 
    <rulegroup name="rzadkie rzeczowniki" id="subst">
        <rule>
            <pattern>
                <token regexp="yes">taka|taką</token>
            </pattern>
            <disambig action="filter" postag="adj.*"/>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">kłamie|czekał</token>
            </pattern>
            <disambig action="filter" postag="verb.*"/>
        </rule>
        <rule>
            <pattern>
                <token>nic</token>
            </pattern>
            <disambig action="remove"><wd lemma="nica" pos="subst:pl:gen:f">nic</wd></disambig>
        </rule>
    </rulegroup>

    <rulegroup name="winny/winien -> przymiotnik" id="winien">
        <rule>
            <pattern>
                <unify> <feature id="number"/>
                    <token postag="verb:winien.*" postag_regexp="yes" regexp="yes">win.*</token>
                    <token inflected="yes" postag="verb:.*" postag_regexp="yes">być</token>
                </unify>
            </pattern>
            <disambig action="filter" postag="adj.*"/>
            <example type="untouched">Powinien był pójść do lekarza.</example>
            <example type="ambiguous" inputform="Winni[winien/verb:winien:pl:m1.p1:ter:imperf:nonrefl,winny/adj:pl:nom.voc:m1.p1:pos,winny/subst:pl:nom:m1,winny/subst:pl:voc:m1]" outputform="Winni[winny/adj:pl:nom.voc:m1.p1:pos]"><marker>Winni</marker> są już ukarani.</example>
        </rule>
        <rule>
            <pattern>
                <unify>
                    <feature id="number"/>
                    <token inflected="yes" postag="verb:.*" postag_regexp="yes">być</token>
                    <marker>
                        <token postag="verb:winien.*" postag_regexp="yes" regexp="yes">win.*</token>
                    </marker>
                </unify>
            </pattern>
            <disambig action="filter" postag="adj.*"/>
            <example type="untouched">Powinien był pójść do lekarza.</example>
            <example type="untouched">Każdy winien przestrzegać prawa!</example>
            <example type="ambiguous" inputform="winni[winien/verb:winien:pl:m1.p1:ter:imperf:nonrefl,winny/adj:pl:nom.voc:m1.p1:pos,winny/subst:pl:nom:m1,winny/subst:pl:voc:m1]" outputform="winni[winny/adj:pl:nom.voc:m1.p1:pos]">To oni są <marker>winni</marker>!</example>
        </rule>
    </rulegroup>

    <rule id="WINNA_LATOROSL" name="winna latorośl">
        <pattern>
            <marker><token postag="verb.*" postag_regexp="yes">winna</token></marker>
            <token>latorośl</token>
        </pattern>
        <disambig postag="adj:sg:nom.voc:f:pos"/>
        <example type="untouched">Ona była winna.</example>
        <example type="ambiguous" inputform="winna[winien/verb:winien:sg:f:ter:imperf:nonrefl,winna/subst:sg:nom:f,winna/subst:sg:voc:f,winny/adj:sg:nom.voc:f:pos]"
                 outputform="winna[winny/adj:sg:nom.voc:f:pos]">Iż <marker>winna</marker> latorośl wybrana wyda jeno ocet.</example>
    </rule>

    <rule id="WINNY_DAT_BYC" name="winny/winien -> przymiotnik w konstrukcji z datiwem">
        <pattern>
            <marker>
            <token postag="verb:winien.*" postag_regexp="yes" regexp="yes">win.*</token>
            </marker>
            <token postag=".*dat.*" postag_regexp="yes"/>
            <token inflected="yes" postag="verb:.*" postag_regexp="yes">być</token>
        </pattern>
        <disambig action="filter" postag="adj.*"/>
        <example type="ambiguous" inputform="winni[winien/verb:winien:pl:m1.p1:ter:imperf:nonrefl,winny/adj:pl:nom.voc:m1.p1:pos,winny/subst:pl:nom:m1,winny/subst:pl:voc:m1]"
                 outputform="winni[winny/adj:pl:nom.voc:m1.p1:pos]">Otóż <marker>winni</marker> mi jesteście paszę</example>
        <example type="untouched">Winna pójść do lekarza.</example>
    </rule>
<!-- 
    <rulegroup name="zdarzył w sensie niezwrotnym" id="LOS_ZDARZYL">
        <rule>
            <pattern>
                <token regexp="yes" skip="-1">los|przypadek<exception scope="next" regexp="yes">się|,</exception></token>
                <marker>
                    <token>zdarzył</token>
                </marker>
            </pattern>
            <disambig action="remove"><wd lemma="zdarzyć" pos="refl">zdarzył</wd></disambig>
            <example type="untouched">To nie przypadek, że ten wypadek zdarzył się tu.</example>
            <example type="ambiguous" inputform="zdarzył[zdarzyć/refl,zdarzyć/verb:praet:sg:ter:m:perf]" outputform="zdarzył[zdarzyć/verb:praet:sg:ter:m:perf]">Los tak <marker>zdarzył</marker>, mój panie.</example>
        </rule>
        <rule id="LOS2">
            <pattern>
                <marker>
                    <token skip="-1">zdarzył</token>
                </marker>
                <token regexp="yes">los|przypadek</token>
            </pattern>
            <disambig action="remove"><wd lemma="zdarzyć" pos="refl">zdarzył</wd></disambig>
            <example type="untouched">To nie przypadek, że ten wypadek zdarzył się tu.</example>
            <example type="ambiguous" inputform="zdarzył[zdarzyć/refl,zdarzyć/verb:praet:sg:ter:m:perf]" outputform="zdarzył[zdarzyć/verb:praet:sg:ter:m:perf]">Tak <marker>zdarzył</marker> los, mój panie.</example>
        </rule>
    </rulegroup>
 -->
 
	<!--  TODO: czy to nadal potrzebne po PoliMorfie? 
    <rule name="skrótowce jako nieodmienne" id="SKROTOWCE_IRREG">
        <pattern>
            <token postag="prep:.*" postag_regexp="yes"/>
            <marker>
                <token regexp="yes">\p{Lu}+[i]*\p{Lu}{1,4}+</token>
            </marker>
        </pattern>
        <disambig postag="subst:irreg"/>
        <example type="untouched">ONZ wystosowała pismo do redakcji Przeglądu Wędkarskiego.</example>
        <example type="ambiguous" inputform="ONZ[ONZ/subst:pl:gen:m3,ONZ/subst:sg:gen:m3]" outputform="ONZ[ONZ/subst:irreg]">Do <marker>ONZ</marker> dotarło pismo z redakcji Przeglądu Wędkarskiego.</example>
    </rule>
    -->

    <rule name="wiodący w sensie właściwym" id="WIADACY_ADJ">
        <pattern>
            <unify> <feature id="number"/><feature id="gender"/> <feature id="case"/>
                <token skip="5" regexp="yes" inflected="yes">trasa|szlak|droga|trakt|drogi</token>
                <marker>
                    <token inflected="yes" postag="pact.*" postag_regexp="yes">wieść</token>
                </marker>
            </unify>
        </pattern>
        <disambig action="replace"><match no="1" postag_regexp="yes" postag="pact(.*):imperf:aff:refl.nonrefl" postag_replace="adj$1:pos"/></disambig>
        <example type="untouched">Tematem wiodącym tej książki są grzyby.</example>
        <example type="ambiguous" inputform="wiodącą[wieść/pact:sg:acc.inst:f:imperf:aff:refl.nonrefl]" outputform="wiodącą[wieść/adj:sg:acc.inst:f:pos]">Szedłem drogą <marker>wiodącą</marker> w stronę wioski.</example>
    </rule>

    <rulegroup name="co innego" id="CO_INNEGO">
        <rule>
            <pattern>
                <marker>
                    <token>co</token>
                </marker>
                <token>innego</token>
            </pattern>
            <disambig action="add"><wd lemma="co" pos="co_innego">co</wd></disambig>
            <example type="untouched">To było coś innego.</example>
            <example type="ambiguous" inputform="co[co/comp,co/prep:acc,co/prep:nom,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]" outputform="co[co/co_innego,co/comp,co/prep:acc,co/prep:nom,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]">To było <marker>co</marker> innego.</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token>czym</token>
                </marker>
                <token>innym</token>
            </pattern>
            <disambig action="add"><wd lemma="co" pos="czym_innym">czym</wd></disambig>
            <example type="untouched">To było coś innego.</example>
            <example type="ambiguous" inputform="czym[co/subst:sg:loc:n2]" outputform="czym[co/czym_innym,co/subst:sg:loc:n2]">Mowa o <marker>czym</marker> innym.</example>
        </rule>
    </rulegroup>

    <rule name="co drugi" id="CO_DRUGI">
        <pattern>
            <marker>
                <token>co</token>
            </marker>
            <token inflected="yes" regexp="yes">drugi|trzeci|czwarty|piąty|szósty|siódmy|ósmy|dziewiąty|dziesiąty</token>
        </pattern>
        <disambig action="add"><wd lemma="co" pos="co_drugi">co</wd></disambig>
        <example type="untouched">To było coś innego.</example>
        <example type="ambiguous" inputform="co[co/comp,co/prep:acc,co/prep:nom,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]" outputform="co[co/co_drugi,co/comp,co/prep:acc,co/prep:nom,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]">Spotykamy się w <marker>co</marker> drugi wtorek.</example>
    </rule>

    <rulegroup name="To co...? -> conj" id="TO_CO">
        <rule>
            <pattern>
                <token postag="SENT_START"/>
                <marker>
                    <token>to</token>
                </marker>
                <token skip="-1" regexp="yes">co|kto</token>
                <token postag="SENT_END">?</token>
            </pattern>
            <disambig postag="conj"/>
            <example type="untouched">To co zrobiłeś jest chamstwem.</example>
            <example type="ambiguous" inputform="To[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]" outputform="To[to/conj]"><marker>To</marker> co mam zrobić?</example>
        </rule>
        <rule>
            <pattern>
                <token postag="SENT_START"/>
                <token>no</token>
                <marker>
                    <token>to</token>
                </marker>
                <token skip="-1" regexp="yes">co|kto</token>
                <token postag="SENT_END">?</token>
            </pattern>
            <disambig postag="conj"/>
            <example type="untouched">To co zrobiłeś jest chamstwem.</example>
            <example type="ambiguous" inputform="to[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]" outputform="to[to/conj]">No <marker>to</marker> co mam zrobić?</example>
        </rule>
        <rule>
            <pattern>
                <token postag="SENT_START"/>
                <marker>
                    <token>to</token>
                </marker>
                <token skip="-1" regexp="yes">co|kto</token>
                <token>?</token>
                <token>.</token>
                <token>.</token>
                <token postag="SENT_END">.</token>
            </pattern>
            <disambig postag="conj"/>
            <example type="untouched">To co zrobiłeś jest chamstwem.</example>
            <example type="ambiguous" inputform="To[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]" outputform="To[to/conj]"><marker>To</marker> co mam zrobić?...</example>
        </rule>
        <rule>
            <pattern>
                <token postag="SENT_START"/>
                <token>no</token>
                <marker>
                    <token>to</token>
                </marker>
                <token skip="-1" regexp="yes">co|kto</token>
                <token>?</token>
                <token>.</token>
                <token>.</token>
                <token postag="SENT_END">.</token>
            </pattern>
            <disambig postag="conj"/>
            <example type="untouched">To co zrobiłeś jest chamstwem.</example>
            <example type="ambiguous" inputform="to[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]" outputform="to[to/conj]">No <marker>to</marker> co mam zrobić?...</example>
        </rule>
    </rulegroup>

    <rule name="Jest to -> ten/adj" id="TO_TEN_ADJ">
        <pattern>
            <token regexp="yes">jest|będzie|był[oa]?</token>
            <marker>
                <token>to</token>
            </marker>
        </pattern>
        <disambig postag="adj:sg:nom.voc:n1.n2:pos"/>
        <example type="untouched">To jest problem.</example>
        <example type="ambiguous" inputform="to[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]" outputform="to[ten/adj:sg:nom.voc:n1.n2:pos]" >Jest <marker>to</marker> problem.</example>
    </rule>

	<!--  for za_pewne rule -->
	<rule name="pewne qub" id="pewne_qub">
		<pattern>
			<marker><token>pewne</token></marker>
		</pattern>
		<disambig action="add"><wd lemma="pewne" pos="qub">pewne</wd></disambig>
	</rule>


    <rule name="Oznaczenie przyimka za wymaganego przez czasownik" id="ZA_DEP">
        <pattern>
            <token skip="5" regexp="yes" inflected="yes">uważać|dziękować|przepraszać|uchodzić|przeprosić|uznać|uznawać|odpowiadać<exception scope="next" regexp="yes">[\p{Punct}—–„«»…&amp;&amp;[^\.]]+</exception></token>
            <marker>
                <token>za</token>
            </marker>
        </pattern>
        <disambig action="add"><wd lemma="za" pos="DEP">za</wd></disambig>
        <example type="untouched">Potrwa to za pewne kilka dni.</example>
        <example type="ambiguous" inputform="za[za/prep:acc,za/prep:gen,za/prep:inst,za/qub]" outputform="za[za/DEP,za/prep:acc,za/prep:gen,za/prep:inst,za/qub]">Chciałbym przeprosić <marker>za</marker> pewne nieporozumienie.</example>
    </rule>

    <rule name="pewny + rzeczownik" id="PEWNE_UNIFY">
        <pattern>
            <unify> <feature id="number"/><feature id="gender"/> <feature id="case"/>
                <token>pewne</token>
                <token postag="subst.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="subst.*"/></token>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Za pewne tak uważam.</example>
        <example type="ambiguous" inputform="pewne[pewien/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,pewien/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos,pewne/qub,pewny/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,pewny/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos]"
                 outputform="pewne[pewien/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,pewien/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos,pewny/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,pewny/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos]">Za <marker>pewne</marker> kwoty można kupić nawet krowę.</example>
    </rule>

    <!--  useful for removing false alarms for non-detected sentence-ends (note: it doesn't break the sentence for real) -->
    <rule name="Oznaczenie końca zdania" id="SRX_PL_FIX">
        <pattern>
            <token regexp="yes">\p{L}</token>
            <marker>
                <token>.</token>
            </marker>
            <and>
                <token inflected="yes" regexp="yes"><exception inflected="yes" regexp="yes">\p{Lu}.*</exception>\p{Ll}+</token>
                <token regexp="yes">\p{Lu}\p{Ll}+</token>
            </and>
        </pattern>
        <disambig action="add"><wd lemma="." pos="SENT_END">.</wd></disambig>
        <example type="untouched">To jest Józef R. Asdaafvafsf</example>
        <example type="ambiguous" inputform=".[.]" outputform=".[&lt;/S&gt;]">To jest cząstka B<marker>.</marker> Dopiero w niej jest cząstka A.</example>
    </rule>

    <rule name="Dwukropek w zapisie liczb, np. godzin lub proporcji" id="DWUKROPEK_GODZINA">
        <pattern>
            <token regexp="yes">\d+</token>
            <marker>
                <token spacebefore="no">:</token>
            </marker>
            <token spacebefore="no" regexp="yes">\d+</token>
        </pattern>
        <disambig action="add"><wd pos="interp:nospace"/></disambig>
        <example type="untouched">Punkt 5: zrównać płacę minimalną.</example>
        <example type="ambiguous" inputform=":[:]" outputform=":[:/interp:nospace]">Pociąg odjeżdża o 15<marker>:</marker>34.</example>
    </rule>

    <!--  tagging punctuation -->
    <rule name="Interpunkcja - bez kropki" id="PUNCT_NO_DOT">
        <pattern>
            <token regexp="yes">[\p{Punct}—–„«»…”&amp;&amp;[^!\.]]<exception postag="SENT_END"/><exception postag="interp:nospace"/></token>
        </pattern>
        <disambig action="add"><wd pos="interp:comma"/></disambig>
        <example type="untouched">To jest głowa dr. Jekylla.</example>
        <example type="untouched">Pociąg odjeżdża o 15:45.</example>
        <example type="ambiguous" inputform=",[,]" outputform=",[,/interp:comma]">To jest coś<marker>,</marker> co wiedziałem od dawna.</example>
    </rule>

    <!-- conjunctions that take a comma -->
    <rule name="Spójniki wymagające przecinka lub zastępujące go" id="COMP_COMMA">
        <pattern>
            <token inflected="yes" regexp="yes">aby|acz|aczkolwiek|albo|albowiem|ale|aleć|aliści|ani|azali|ażeby|bo|byleby|bądź|choć|chociaż|chociażby|czy|czyli|czyliż|dlaczego|dopóki|dopóty|gdy|gdyby|gdyż|gdyżby|i|ilekolwiek|ilekroć|iż|iżby|jaki|jeśli|jeżeli|kiedy|który|którędy|lecz|lub|oraz|ponieważ|póki|wszelako|zanim|że|żeby</token>
        </pattern>
        <disambig action="add"><wd pos="comp:comma"/></disambig>
        <example type="untouched">To jest krowa.</example>
        <example type="ambiguous" inputform="ale[ale/conj,ale/qub]" outputform="ale[ale/comp:comma,ale/conj,ale/qub]">Lubię go, <marker>ale</marker> kupię mu pistolet.</example>
    </rule>

    <rule id="INDZIEJ" name="kiedy indziej itp.">
        <pattern>
            <marker>
                <token regexp="yes">nigdy|kiedy|gdzie|nigdzie|gdziekolwiek</token>
            </marker>
            <token>indziej</token>
        </pattern>
        <disambig postag="adv"/>
    </rule>

    <rule id="MALO_KIEDY" name="mało/rzadko kiedy -> adv">
        <pattern>
            <token postag="adv:pos" regexp="yes">mało|rzadko</token>
            <token postag="adv">kiedy</token>
        </pattern>
        <disambig action="filterall"></disambig>
    </rule>

    <rule id="NIE_QUB" name="nie w funkcji negacji czasownika">
        <pattern>
            <marker>
                <token postag="qub">nie<exception scope="previous" postag_regexp="yes" postag="prep:acc.*"></exception></token>
                <token postag="verb.*" postag_regexp="yes"><exception>czczą</exception><exception>dosyć</exception><exception postag_regexp="yes" postag="adj:.*:com"/></token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="nie[nie/conj,nie/qub,on/ppron3:pl:acc:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:praep,on/ppron3:sg:acc:n1.n2:ter:akc.nakc:praep]" outputform="nie[nie/qub]">Proszę, <marker>nie</marker> jedź sam!</example>
        <example type="untouched">Martwię się o nie.</example>
    </rule>

    <rule name="Blokada reguły interpunkcyjnej dla daje vu" id="DAJE_VU_BLOKADA">
        <pattern>
            <marker>
                <token>daje</token>
            </marker>
            <token>vu</token>
        </pattern>
        <disambig action="replace"><match no="1" postag_regexp="yes" postag="verb:fin:sg:ter:imperf:refl.nonrefl" postag_replace="qub"/></disambig>
        <example type="untouched">On daje mu w ryj.</example>
        <example type="ambiguous" inputform="daje[dawać/verb:fin:sg:ter:imperf:refl.nonrefl]" outputform="daje[dawać/qub]">On przeżył <marker>daje</marker> vu.</example>
    </rule>

    <rulegroup name="byc moze -> qub" id="MOZE_QUB">
        <rule>
            <pattern>
                <token>być</token>
                <marker>
                    <token>może</token>
                </marker>
            </pattern>
            <disambig postag="qub"/>
            <example type="untouched">On może być debilem.</example>
            <example type="ambiguous" inputform="może[może/qub,móc/verb:fin:sg:ter:imperf:nonrefl]" outputform="może[może/qub]">On być <marker>może</marker> jest debilem</example>
        </rule>
    </rulegroup>


    <rule name="immunize_Windows" id="KOSHER_WINDOWS">
        <pattern>
            <token>dla</token>
            <marker>
                <token>Windows</token>
            </marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    
    <rule name="m.in." id="M_IN">
    	<pattern case_sensitive="yes">
    		<marker><token>m</token></marker>    	
    	<token>.</token>
    	<token regexp="yes">i[mn]</token>
    	<token>.</token>
    	</pattern>
    	<disambig action="replace"><match no="1" postag_regexp="yes" postag="brev:npun" postag_replace="brev:pun"/></disambig>
    	<example type="ambiguous" inputform="m[metr/brev:npun]" outputform="m[metr/brev:pun]">Jest to <marker>m</marker>.in. kretyn.</example>
    </rule>
    
    <rule name=".pl" id="PL_DOMAIN_NAME">
    	<pattern>
    		<token>.</token>
    		<marker>
    		<token spacebefore="no">pl</token>
    		</marker>
    	</pattern>
    	<disambig action="remove"><wd lemma="plac"/></disambig>
    	<example type="ambiguous" inputform="pl[plac/brev:pun]" outputform="pl[pl]">Alergie.mp.<marker>pl</marker> - serwis</example>
    	<example type="untouched">Adres: pl. Zbawiciela 122</example>
    </rule>
	<rule name=".jp" id="JP_DOMAIN_NAME">
    	<pattern>
    		<token>.</token>
    		<marker>
    		<token spacebefore="no">jp</token>
    		</marker>
    	</pattern>
    	<disambig action="remove"><wd lemma="jak poprzednio"/></disambig>
    	<example type="ambiguous" inputform="jp[jak poprzednio/brev:pun]" outputform="jp[jp]">Alergie.mp.<marker>jp</marker> - serwis</example>
    	<example type="untouched">Skrót - jp.</example>
    </rule>
    <rule name="KC" id="KC">
    	<pattern case_sensitive="yes">
    		<marker><token>KC</token></marker>
    		<token regexp="yes">KPZR|PZPR</token>
    	</pattern>
    	<disambig action="remove"><wd lemma="kodeks cywilny"/></disambig>
    	<example type="ambiguous" inputform="KC[KC/subst:pl:acc:m3,KC/subst:pl:acc:n2,KC/subst:pl:dat:m3,KC/subst:pl:dat:n2,KC/subst:pl:gen:m3,KC/subst:pl:gen:n2,KC/subst:pl:inst:m3,KC/subst:pl:inst:n2,KC/subst:pl:loc:m3,KC/subst:pl:loc:n2,KC/subst:pl:nom:m3,KC/subst:pl:nom:n2,KC/subst:pl:voc:m3,KC/subst:pl:voc:n2,KC/subst:sg:acc:m3,KC/subst:sg:acc:n2,KC/subst:sg:dat:m3,KC/subst:sg:dat:n2,KC/subst:sg:gen:m3,KC/subst:sg:gen:n2,KC/subst:sg:inst:m3,KC/subst:sg:inst:n2,KC/subst:sg:loc:m3,KC/subst:sg:loc:n2,KC/subst:sg:nom:m3,KC/subst:sg:nom:n2,KC/subst:sg:voc:m3,KC/subst:sg:voc:n2,kodeks cywilny/brev:pun]" outputform="KC[KC/subst:pl:acc:m3,KC/subst:pl:acc:n2,KC/subst:pl:dat:m3,KC/subst:pl:dat:n2,KC/subst:pl:gen:m3,KC/subst:pl:gen:n2,KC/subst:pl:inst:m3,KC/subst:pl:inst:n2,KC/subst:pl:loc:m3,KC/subst:pl:loc:n2,KC/subst:pl:nom:m3,KC/subst:pl:nom:n2,KC/subst:pl:voc:m3,KC/subst:pl:voc:n2,KC/subst:sg:acc:m3,KC/subst:sg:acc:n2,KC/subst:sg:dat:m3,KC/subst:sg:dat:n2,KC/subst:sg:gen:m3,KC/subst:sg:gen:n2,KC/subst:sg:inst:m3,KC/subst:sg:inst:n2,KC/subst:sg:loc:m3,KC/subst:sg:loc:n2,KC/subst:sg:nom:m3,KC/subst:sg:nom:n2,KC/subst:sg:voc:m3,KC/subst:sg:voc:n2]"><marker>KC</marker> KPZR</example>
    </rule>
    <rule name="R - nie rok" id="NON_START_POS_R">
    	<pattern case_sensitive="yes">
    		<marker><token>R<exception scope="previous" postag="SENT_START"></exception></token></marker>
    	</pattern>
    	<disambig action="remove"><wd lemma="rok"/></disambig>
    	<example type="untouched">R. 2012</example>
    	<example type="ambiguous" inputform="R[rok/brev:pun]" outputform="R[R]">Enancjomer <marker>R</marker> jest ważny.</example>
    </rule>
    <rule name="in w wyrażeniach łacińskich" id="in">
    	<pattern>
    		<marker><token>in</token></marker>
    		<token regexp="yes">absentia|abstracto|aeternum|aqua|blanco|crudo|dubio|effectu|effigie|extenso|extremis|fidem|flagranti|genere|gratiam|gremio|margine|medias|memoriam|minus|octavo|persona|plus|praxi|puncto|saecula|spe|statu|triplo|vitro|vivo|rebus|bello</token>
    	</pattern>
    	<disambig postag="ign"/>
    	<example type="ambiguous" inputform="in[in/subst:pl:acc:n2,in/subst:pl:dat:n2,in/subst:pl:gen:n2,in/subst:pl:inst:n2,in/subst:pl:loc:n2,in/subst:pl:nom:n2,in/subst:pl:voc:n2,in/subst:sg:acc:n2,in/subst:sg:dat:n2,in/subst:sg:gen:n2,in/subst:sg:inst:n2,in/subst:sg:loc:n2,in/subst:sg:nom:n2,in/subst:sg:voc:n2,inaczej/brev:pun]" outputform="in[in/ign]">Zapłodnienie <marker>in</marker> vitro</example>
    	<example type="untouched">M.in. dwóch ministrów</example>
    </rule>
    <rule name="em" id="em">
    	<pattern>
    		<token regexp="yes">['’]</token>
    		<marker>
    		<token spacebefore="no">em</token>
    		</marker>
    	</pattern>
    	<disambig action="remove"><wd lemma="emerytowany"/></disambig>
    	<example type="untouched">Był to em. płk James Bond</example>
    	<example type="ambiguous" inputform="em[em/subst:pl:acc:n2,em/subst:pl:dat:n2,em/subst:pl:gen:n2,em/subst:pl:inst:n2,em/subst:pl:loc:n2,em/subst:pl:nom:n2,em/subst:pl:voc:n2,em/subst:sg:acc:n2,em/subst:sg:dat:n2,em/subst:sg:gen:n2,em/subst:sg:inst:n2,em/subst:sg:loc:n2,em/subst:sg:nom:n2,em/subst:sg:voc:n2,emerytowany/brev:pun]" outputform="em[em/subst:pl:acc:n2,em/subst:pl:dat:n2,em/subst:pl:gen:n2,em/subst:pl:inst:n2,em/subst:pl:loc:n2,em/subst:pl:nom:n2,em/subst:pl:voc:n2,em/subst:sg:acc:n2,em/subst:sg:dat:n2,em/subst:sg:gen:n2,em/subst:sg:inst:n2,em/subst:sg:loc:n2,em/subst:sg:nom:n2,em/subst:sg:voc:n2]">Maximilienem de Robespierre'<marker>em</marker> (Wojciech Pszoniak)</example>
    </rule>
    
     
    <rule name="1 luty" id="NUM_LUTY">
    	<pattern>
    	<token regexp="yes">\d+</token>
    	<marker><token>luty</token></marker>
    	</pattern>    	
    	<disambig action="remove"><wd lemma="lut"></wd></disambig>
    	<example type="untouched">To są zimne luty, przelutuj je.</example>
    	<example type="ambiguous" inputform="luty[lut/subst:pl:acc:m3,lut/subst:pl:nom:m3,lut/subst:pl:voc:m3,luty/adj:sg:acc:m3:pos,luty/adj:sg:nom.voc:m1.m2.m3:pos,luty/subst:sg:acc:m3,luty/subst:sg:nom:m3,luty/subst:sg:voc:m3]" outputform="luty[luty/adj:sg:acc:m3:pos,luty/adj:sg:nom.voc:m1.m2.m3:pos,luty/subst:sg:acc:m3,luty/subst:sg:nom:m3,luty/subst:sg:voc:m3]">25 <marker>luty</marker> to data.</example>
    </rule>
    
    <rule name="no, halo - interj" id="no_halo_interj">
    	<pattern>
    		<token postag="SENT_START"/>
    		<marker>
    		<token regexp="yes">no|halo|cóż</token>
    		</marker>
    	</pattern>
    	<disambig postag="interj"></disambig>
    </rule>
    
    <rule name="Tel Awiw" id="TEL_AWIW">
    	<pattern case_sensitive="yes">
    		<marker>
    			<token>Tel</token>
    		</marker>
    		<token inflected="yes">Awiw</token>
    	</pattern>
    	<disambig action="replace"><match no="2" postag_regexp="yes" postag="subst.*">Tel</match></disambig>
    </rule>
    
    <rule name="n.e." id="NE_BREV">
    	<pattern>
    		<token>n</token>
    		<token>.</token>
    		<marker>
    		<token>e</token>
    		</marker>
    		<token>.</token>
    	</pattern>
    	<disambig action="add"><wd lemma="era" pos="brev:pun"/></disambig>
    </rule>
    
    <rule name="nn" id="NN_BREV">
    	<pattern>
    		<token>nn</token>
    		<token>.</token>
    	</pattern>
    	<disambig postag="brev:pun"/>
    </rule>	
    
    <rule name="red. nauk." id="red_nauk_brev">
    	<pattern>
    	<token>red</token>
    	<token>.</token>
    	<marker>
    	<token>nauk</token>
    	</marker>
    	<token>.</token>
    	</pattern>
    	<disambig action="add"><wd lemma="naukowy" pos="brev:pun"/></disambig>
    </rule>
    
    <rule name="n.p.m." id="npm">
    	<pattern>
    		<token regexp="yes">[np]</token>
    		<token>.</token>
    		<token>p</token>
    		<token>.</token>
    		<marker>
    			<token>m</token>
    		</marker>
    		<token>.</token>
    	</pattern>
    	<disambig action="replace"><wd lemma="morza" pos="brev:pun"/></disambig>
    	<example type="untouched">Przebiegł 20 m.</example>
    	<example type="ambiguous" inputform="m[metr/brev:npun]" outputform="m[morza/brev:pun]">Ta góra ma wysokość 20 m n. p. <marker>m</marker>.</example>
    </rule>
    
    <rule name="co jako qub" id="co_qub">
    	<pattern>
    		<marker>
    		<token>co</token>
    		</marker>
    		<unify><feature id="gender"/>
    		<feature id="case"></feature>
    		<feature id="number"></feature>
    		<token postag="adj.*:com" postag_regexp="yes"/>
    		<token postag="(subst|ger).*" postag_regexp="yes"/>
    		</unify>
    	</pattern>
    	<disambig postag="qub"/>
    	<example type="untouched">I, co ważniejsze, jest to dzisiaj rzadkość.</example>
    	<example type="ambiguous" inputform="co[co/comp,co/prep:acc,co/prep:nom,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]" outputform="co[co/qub]">Przy <marker>co</marker> trudniejszych fragmentach robił sobie notatki.</example>
    </rule>
    
    <!-- TODO: remove both from Morfologik! -->
    <rule name="C" id="C">
    	<pattern>
    	<token>C</token>
    	</pattern>
    	<disambig postag="qub"/>
    </rule>
    
    <rule name="K" id="K">
    	<pattern>
    	<token>K</token>
    	</pattern>
    	<disambig postag="qub"/>
    </rule>
    
    <rule name="poor man's agglutination" id="Gdybysie">
    	<pattern>
    		<token regexp="yes">(gdyby|jeśli|jeżeli|jeżeliby|jeśliby|gdy)(ś|śmy|ście|m)</token>
    	</pattern>
    	<disambig action="replace"><match no="1" postag="conj">gdyby</match></disambig>
    </rule>

    <rule name="żem żeś" id="ZESIE">
        <pattern>
            <token regexp="yes">że[mś]</token>
        </pattern>
        <disambig action="add"><wd pos="conj" lemma="że"/></disambig>
    </rule>
    
    <rulegroup id="PIECIU" name="Pięciu jako gerundium">
    <rule>
    	<pattern>
    		<marker>
    			<token>pięciu</token>
    		</marker>
    		<token>się</token>
    		<token regexp="yes">wzwyż|po</token>
    	</pattern>
    	<disambig><match no="1" postag="ger.*"  postag_regexp="yes"/></disambig>
    	<example type="untouched">Widzę pięciu wyrostków.</example>
    	<example type="ambiguous" inputform="pięciu[piąć/ger:sg:dat.loc:n2:imperf:aff:refl,pięć/num:pl:acc:m1:rec,pięć/num:pl:gen.dat.inst.loc:m1.m2.m3.f.n2:congr,pięć/num:pl:nom.voc:m1:rec]" 
    	outputform="pięciu[piąć/ger:sg:dat.loc:n2:imperf:aff:refl]">Opowiem wam o <marker>pięciu</marker> się wzwyż.</example>
    </rule>
    <rule>
    	<pattern>
    		<marker>
    			<token>pięciu</token>
    		</marker>
    		<token>się</token>
    		<token>w</token>
    		<token>górę</token>
    	</pattern>
    	<disambig><match no="1" postag="ger.*"  postag_regexp="yes"/></disambig>
    	<example type="untouched">Widzę pięciu wyrostków.</example>
    	<example type="ambiguous" inputform="pięciu[piąć/ger:sg:dat.loc:n2:imperf:aff:refl,pięć/num:pl:acc:m1:rec,pięć/num:pl:gen.dat.inst.loc:m1.m2.m3.f.n2:congr,pięć/num:pl:nom.voc:m1:rec]" 
    	outputform="pięciu[piąć/ger:sg:dat.loc:n2:imperf:aff:refl]">Opowiem wam o <marker>pięciu</marker> się w górę.</example>
    </rule>    
    </rulegroup>
    <rule id="PIECIU_NUM" name="Pięciu jako liczebnik">
    	<pattern>
    		<marker><token postag="num.*" postag_regexp="yes">pięciu</token></marker>
    	</pattern>
    	<disambig action="filter" postag="^(?!ger:).*$"/>
    	<example type="ambiguous" inputform="pięciu[piąć/ger:sg:dat.loc:n2:imperf:aff:refl,pięć/num:pl:acc:m1:rec,pięć/num:pl:gen.dat.inst.loc:m1.m2.m3.f.n2:congr,pięć/num:pl:nom.voc:m1:rec]" 
    	outputform="pięciu[pięć/num:pl:acc:m1:rec,pięć/num:pl:gen.dat.inst.loc:m1.m2.m3.f.n2:congr,pięć/num:pl:nom.voc:m1:rec]">Widzę ich tu <marker>pięciu</marker>.</example>
    	<example type="untouched">O pięciu się w górę nie słyszałem.</example>
    </rule>
        
    <rule name="wiadomo" id="Wiadomo">
    	<pattern>    		
    		<marker><token>wiadomo</token></marker>
    	</pattern>
    	<disambig postag="pred"/>
    	<example type="ambiguous" inputform="wiadomo[wiadomo/adv:pos,wiadomo/pred,wiadomy/adja]" outputform="wiadomo[wiadomo/pred]">Jak <marker>wiadomo</marker>, nie tylko Marsjanie lubili pierogi.</example>    	
    </rule>
    
    <rule name="można" id="mozna">
    <pattern>
      <marker>
      <and>
        <token postag="pred" skip="1">można</token>
        <token postag="adj:sg:nom.voc:f:pos"/>
      </and>
      <token postag="verb:inf.*" postag_regexp="yes"/> 
      </marker>
    </pattern>
    <disambig postag="pred"/>
    <example type="untouched">Jest to można kobieta.</example>
    <example type="ambiguous" inputform="Można[można/pred,możny/adj:sg:nom.voc:f:pos]" outputform="Można[można/pred]"><marker>Można</marker> spotkać go w lasach.</example>
   </rule>

    <rule name="można by/było" id="mozna_by">
        <pattern>
            <marker><token>można</token></marker>
            <token regexp="yes">by(?:ło)?</token>
        </pattern>
        <disambig postag="pred"/>
        <example type="untouched">To jest można królowa.</example>
        <example type="ambiguous" inputform="Można[można/pred,możny/adj:sg:nom.voc:f:pos]" outputform="Można[można/pred]"><marker>Można</marker> by to zrobić.</example>
        <example type="ambiguous" inputform="Można[można/pred,możny/adj:sg:nom.voc:f:pos]" outputform="Można[można/pred]"><marker>Można</marker> było to zrobić.</example>
    </rule>

    <rulegroup name="chociaż/choć jako kublik" id="CHOC">
     <rule>
      <pattern>
        <marker>
          <token regexp="yes">chociaż|choć</token>
        </marker>
        <token regexp="yes" inflected="yes">raz|trochę|jeden|przez|odrobinę|przypadkiem</token>
      </pattern>
      <disambig postag="qub"/>
      <example type="untouched">Dziewczyna jest bystra, choć nieładna.</example>
      <example type="ambiguous" inputform="chociaż[chociaż/comp,chociaż/comp:comma,chociaż/qub]" outputform="chociaż[chociaż/qub]">Każdy człowiek <marker>chociaż</marker> raz w życiu chciałby zjeść krowę.</example>
    </rule>
    <rule>
        <pattern>
            <token postag="qub">może</token>
            <token regexp="yes" postag="qub">chociaż|choć</token>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">Dziewczyna jest bystra, choć nieładna.</example>
        <example type="ambiguous" inputform="chociaż[chociaż/comp,chociaż/comp:comma,chociaż/qub]" outputform="chociaż[chociaż/qub]">Może <marker>chociaż</marker> teraz zjesz krowę!</example>
    </rule>
    <rule>
        <pattern>
            <marker><token regexp="yes" postag="qub">chociaż|choć<exception scope="previous">,</exception></token></marker>
            <token/>
            <token postag="SENT_END|interp:comma" postag_regexp="yes"/>
        </pattern>
        <disambig postag="qub"/>
        <example type="ambiguous"
                inputform="choć[choć/comp,choć/comp:comma,choć/qub]"
                outputform="choć[choć/qub]">niech no ujrzę, że ktoś z was tknie go <marker>choć</marker> palcem!</example>
    </rule>
    </rulegroup>

    
    <rule name="około jako kublik" id="OKOLO">
      <pattern>
        <token regexp="yes">przez|na|za</token>
        <marker>
        <token>około</token>            
        </marker>
      </pattern>
      <disambig postag="qub"/>
      <example type="untouched">Trwało to około godziny.</example>
      <example type="ambiguous" inputform="około[około/adv:pos,około/prep:gen,około/qub]" outputform="około[około/qub]">Ciągnęło się to przez <marker>około</marker> godzinę.</example>
    </rule>

    <rule name="Anno Domini to nie wołacz" id="Anno_xxx">
        <pattern>
            <marker>
            <token>Anno</token>
            </marker>
            <token>Domini</token>
        </pattern>
        <disambig action="replace"><wd pos="xxx" lemma="annus"/></disambig>
        <example type="untouched">Anno, umyj zęby!</example>
        <example type="ambiguous" inputform="Anno[Anna/subst:sg:voc:f]" outputform="Anno[annus/xxx]"><marker>Anno</marker> Domini MMXX</example>
    </rule>

    <rule id="OWCA_MECZY" name="meczy jako czasownik">
        <pattern>
            <token skip="4" regexp="yes">owca|koza|baran</token>
            <marker><token>meczy</token></marker>
        </pattern>
        <disambig postag="meczeć/verb:fin:sg:ter:imperf:nonrefl"/>
    </rule>

    <rulegroup id="OBCE_APOSTROFY" name="odmiana nazwisk i nazw obcych">
        <rule>   <!-- dopełniacz potencjalny -->
            <pattern>
                <token postag="prep:gen.*" postag_regexp="yes"/>
                <marker>
                    <token postag_regexp="yes" postag="subst:.*nom.*" regexp="yes">.*[eys]$</token>
                </marker>
                <token spacebefore="no" regexp="yes">['’]</token>
                <token spacebefore="no" regexp="yes">a|ego</token>
            </pattern>
            <disambig action="replace"><match no="2" postag_regexp="yes" postag="(subst:sg.*):nom:(.*)" postag_replace="$1:gen:$2"/></disambig>
            <example type="ambiguous" inputform="Montaigne[Montaigne/subst:sg:nom:m1]" outputform="Montaigne[Montaigne/subst:sg:gen:m1]">U <marker>Montaigne</marker>'a czytamy następujący passus.</example>
            <example type="untouched">Mark'a samochodu</example>
            <example type="ambiguous" outputform="Jarry[Jarry/subst:sg:gen:m1]" inputform="Jarry[Jarry/subst:pl:nom:m1,Jarry/subst:pl:voc:m1,Jarry/subst:sg:nom:m1,Jarry/subst:sg:voc:m1]">Książka uczyniła z <marker>Jarry</marker>'ego artystę.</example>
        </rule>
        <rule>   <!-- biernik potencjalny -->
            <pattern>
                <token postag="prep:acc.*" postag_regexp="yes"/>
                <marker>
                    <token postag_regexp="yes" postag="subst:.*nom.*" regexp="yes">.*[eys]$</token>
                </marker>
                <token spacebefore="no" regexp="yes">['’]</token>
                <token spacebefore="no" regexp="yes">a|ego</token>
            </pattern>
            <disambig action="replace"><match no="2" postag_regexp="yes" postag="(subst:sg.*):nom:(.*)" postag_replace="$1:acc:$2"/></disambig>
            <example type="ambiguous" inputform="Montaigne[Montaigne/subst:sg:nom:m1]" outputform="Montaigne[Montaigne/subst:sg:acc:m1]">To wszystko przez <marker>Montaigne</marker>'a.</example>
            <example type="untouched">Mark'a samochodu</example>
            <example type="ambiguous" outputform="Jarry[Jarry/subst:sg:acc:m1]" inputform="Jarry[Jarry/subst:pl:nom:m1,Jarry/subst:pl:voc:m1,Jarry/subst:sg:nom:m1,Jarry/subst:sg:voc:m1]">Wszystko przez <marker>Jarry</marker>'ego!</example>
        </rule>
        <rule>
            <pattern>
                <token postag="prep:dat.*" postag_regexp="yes"/>
                <marker>
                    <token postag_regexp="yes" postag="subst:.*nom.*" regexp="yes">.*[eys]$</token>
                </marker>
                <token spacebefore="no" regexp="yes">['’]</token>
                <token spacebefore="no">owi</token>
            </pattern>
            <disambig action="replace"><match no="2" postag_regexp="yes" postag="(.*):nom:(.*)" postag_replace="$1:dat:$2"/></disambig>
            <example type="ambiguous" inputform="Montaigne[Montaigne/subst:sg:nom:m1]" outputform="Montaigne[Montaigne/subst:sg:dat:m1]">To wszystko dzięki <marker>Montaigne</marker>'owi.</example>
            <example type="untouched">Jestem rybak'iem.</example>
        </rule>
        <rule>
            <pattern>
                <token postag="prep:inst.*" postag_regexp="yes"/>
                <marker>
                    <token postag_regexp="yes" postag="subst:.*nom.*" regexp="yes">.*[eys]$</token>
                </marker>
                <token spacebefore="no" regexp="yes">['’]</token>
                <token spacebefore="no">em</token>
            </pattern>
            <disambig action="replace"><match no="2" postag_regexp="yes" postag="(.*):nom:(.*)" postag_replace="$1:inst:$2"/></disambig>
            <example type="ambiguous" inputform="Montaigne[Montaigne/subst:sg:nom:m1]" outputform="Montaigne[Montaigne/subst:sg:inst:m1]">Porównajmy go z <marker>Montaigne</marker>'em.</example>
            <example type="untouched">Jestem rybak'iem.</example>
        </rule>
        <rule>
            <pattern>
                <token postag="prep:loc.*" postag_regexp="yes"/>
                <marker>
                    <token postag_regexp="yes" postag="subst:.*nom.*" regexp="yes">.*[eys]$</token>
                </marker>
                <token spacebefore="no" regexp="yes">['’]</token>
                <token spacebefore="no">u</token>
            </pattern>
            <disambig action="replace"><match no="2" postag_regexp="yes" postag="(.*):nom:(.*)" postag_replace="$1:loc:$2"/></disambig>
            <example type="ambiguous" inputform="Montaigne[Montaigne/subst:sg:nom:m1]" outputform="Montaigne[Montaigne/subst:sg:loc:m1]">Rozmawiajmy o <marker>Montaigne</marker>'u.</example>
            <example type="untouched">Bajka o rybak'u.</example>
        </rule>
    </rulegroup>

    <rule name="potencjalne brev" id="heuristic_brev_pun">
    <pattern>
    <marker>
      <token postag="UNKNOWN" regexp="yes">[\p{Ll}&amp;&amp;[^aeouiyęąó]][\p{Ll}&amp;&amp;[^aeouiyęąó]]+</token>
    </marker>
      <token>.</token>
    </pattern>
    <disambig postag="brev:pun"/>
    <example type="untouched">To był XX w.</example>
    <example type="ambiguous" inputform="mghr[mghr]" outputform="mghr[mghr/brev:pun]">To jest <marker>mghr</marker>. Lubiwicz.</example>
    </rule>

    <rule name="bądź co bądź" id="BADZ_CO_BADZ">
        <pattern>
            <marker>
                <token postag="qub">bądź</token>
                <token postag="qub">co</token>
                <token postag="qub">bądź</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">Bądź pozdrowiony!</example>
        <example type="ambiguous" inputform="bądź[być/verb:impt:sg:sec:imperf:nonrefl,bądź/comp:comma,bądź/conj,bądź/qub]" outputform="bądź[bądź/qub]">Nie wypadało mu mówić głupstw, <marker>bądź</marker> co bądź reprezentował parlament.</example>
    </rule>

    <rule name="bądź zdrów" id="BADZ_VERB">
        <pattern>
            <marker>
                <token>bądź</token>
            </marker>
            <token>zdrów</token>
        </pattern>
        <disambig postag="verb:impt:sg:sec:imperf:nonrefl"/>
        <example type="untouched">Bądź co bądź to prawda.</example>
        <example type="ambiguous" inputform="Bądź[Bądź/comp:comma,być/verb:impt:sg:sec:imperf:nonrefl,bądź/conj,bądź/qub]" outputform="Bądź[być/verb:impt:sg:sec:imperf:nonrefl]"><marker>Bądź</marker> zdrów.</example>
    </rule>

    <rule id="PRZE_ZEMNIE" name="zemnie -> xxx">
        <pattern>
            <token>prze</token>
            <marker><token>zemnie</token></marker>
        </pattern>
        <disambig postag="ign"/>
    </rule>

    <rule id="AD_FINEM" name="ad finem -> zwrot obcojęzyczny">
        <pattern>
            <token>ad</token>
            <marker><token>finem</token></marker>
        </pattern>
        <disambig postag="xxx"/>
    </rule>

    <rule id="PRZEZ_LAT_KILKA" name="Przez lat kilka – bez komunikatu o błędzie w PREP_CASUS">
        <pattern>
            <token>przez</token>
            <marker>
                <token regexp="yes">lat|tygodni|chwil|minut|godzin</token>
            </marker>
            <token postag="num:pl.*acc.*" postag_regexp="yes"/>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="ZWYKL_BYL" name="Zwykł był – bez komunikatu o braku przecinka">
        <pattern>
            <token>zwykł</token>
            <token>był</token>
        </pattern>
        <disambig action="immunize"></disambig>
    </rule>

    <rule id="BYLBYM_PRZYSIAGL" name="Byłbym zrobił -> niepotrzebny przecinek">
        <pattern>
            <unify>
                <feature id="number"/><feature id="gender"/>
                <token inflected="yes" postag="verb:pot.*" postag_regexp="yes">być</token>
                <marker>
                    <token postag="verb:praet.*" postag_regexp="yes"/>
                </marker>
            </unify>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="CHOC_JOTA" name="choć nie jako spójnik">
        <pattern>
            <marker>
                <token>choć</token>
            </marker>
            <token inflected="yes">jota</token>
        </pattern>
        <disambig postag="qub"/>
    </rule>

    <rule id="JAK_ULAL" name="jak ulał -> bez przecinka">
        <pattern>
            <token><exception>,</exception></token>
            <token>jak</token>
            <marker><token>ulał</token></marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rulegroup id="BOG_WIE_SKAD" name="Bóg wie skąd - bez komunikatu o braku przecinka, bo to partykuła">
    <rule>
        <pattern case_sensitive="yes">
            <token skip="1">Bóg<exception scope="next" negate="yes" regexp="yes">jeden|wie</exception></token>
            <marker>
                <token>wie</token>
                <token regexp="yes">co|kto|kiedy|dlaczego|gdzie|jak|skąd|dokąd|czemu</token>
            </marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule>
        <pattern case_sensitive="yes">
            <token skip="1">Bóg<exception scope="next" negate="yes" regexp="yes">jeden|wie</exception></token>
            <marker>
                <token>wie</token>
                <token>z</token>
            </marker>
            <token regexp="yes">czego|kim</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule>
        <pattern case_sensitive="yes">
            <token skip="1">Bóg<exception scope="next" negate="yes" regexp="yes">jeden|wie</exception></token>
            <marker>
                <token>wie</token>
                <token regexp="yes">po|[zn]a</token>
            </marker>
            <token>co</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule>
        <pattern case_sensitive="yes">
            <token skip="1">Bóg<exception scope="next" negate="yes" regexp="yes">jeden|wie</exception></token>
            <marker>
                <token>wie</token>
                <token regexp="yes">[zo]</token>
            </marker>
            <token>czym</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule>
        <pattern case_sensitive="yes">
            <token skip="1">Bóg<exception scope="next" negate="yes" regexp="yes">jeden|wie</exception></token>
            <marker>
                <token>wie</token>
                <token>do</token>
            </marker>
            <token>kogo</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    </rulegroup>

    <rulegroup id="NIE_WIADOMO_SKAD" name="nie wiadomo co - bez komunikatu o braku przecinka, bo to partykuła">
     <rule>
        <pattern>
            <token>nie</token>
            <marker>
                <token>wiadomo</token>
                <token regexp="yes">co|kto|kiedy|dlaczego|gdzie|jak|skąd|dokąd|czemu</token>
            </marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule>
        <pattern>
            <token>nie</token>
            <marker>
                <token>wiadomo</token>
                <token>z</token>
            </marker>
            <token regexp="yes">czego|kim</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule>
        <pattern>
            <token>nie</token>
            <marker>
                <token>wiadomo</token>
                <token regexp="yes">po|[zn]a</token>
            </marker>
            <token>co</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule>
        <pattern>
            <token>nie</token>
            <marker>
                <token>wiadomo</token>
                <token regexp="yes">[zo]</token>
            </marker>
            <token>czym</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule>
        <pattern>
            <token>nie</token>
            <marker>
                <token>wiadomo</token>
                <token>do</token>
            </marker>
            <token>kogo</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    </rulegroup>

    <rule id="WYPISZ_WYMALUJ" name="wypisz wymaluj - bez przecinka">
        <pattern>
            <token>wypisz</token>
            <marker>
                <token>wymaluj</token>
            </marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="RAD_NIERAD" name="rad nierad - bez przecinka">
        <pattern>
            <token inflected="yes">rad</token>
            <marker><token inflected="yes">nierad</token></marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="JAKI_BADZ_X" name="jaki bądź xxx – bez przecinka">
        <pattern>
            <marker>
                <token inflected="yes">jaki</token>
            <token>bądź</token>
            </marker>
            <token postag_regexp="yes" postag="subst.*"><exception>co</exception></token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="JAKI_TAKI" name="jaki taki - nie wymaga przecinka">
        <pattern>
            <marker><token inflected="yes">jaki</token></marker>
            <token><match no="0" regexp_match="^j(.*)" regexp_replace="t$1"></match></token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="Z_GLUPIA_FRANT" name="z głupia frant">
        <pattern>
            <token>z</token>
            <token>głupia</token>
            <token>frant</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="W_W_BREV" name="w w. XIX"> <!-- suppress in word repeat rule -->
        <pattern>
            <token>w</token>
            <marker><token postag="brev:pun">w</token></marker>
            <token>.</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="TO_TO_ZE" name="to to, że"> <!-- suppress in word repeat rule -->
        <pattern>
            <token>to</token>
            <marker><token>to</token></marker>
            <token>,</token>
            <token regexp="yes">że|iż</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="TRA_TA_TA" name="tra ta ta"> <!-- suppress in word repeat rule -->
        <pattern>
            <token>tra</token>
            <marker><token>ta</token></marker>
            <token>ta</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="HO_HO" name="ho ho!"> <!-- suppress in word repeat rule -->
        <pattern>
            <token>ho</token>
            <marker><token>ho</token></marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="W_NIE_NIE" name="w/na/o nie nie"> <!-- suppress in word repeat rule -->
        <pattern>
            <token regexp="yes">[wo]|[zn]a</token>
            <marker><token>nie</token></marker>
            <token>nie</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="W_JAKIE_POL" name="W jakie pół godziny - nie wymaga przecinka">
        <pattern>
            <token postag="prep:.*" postag_regexp="yes"/>
            <marker>
                <token>jakie</token>
            </marker>
            <token postag="num:.*" postag_regexp="yes"/>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    
    <rule id="prez" name="prez. Komorowski">
      <pattern>
        <token regexp="yes">prez|cz|prob|urzęd|pol</token>
        <token spacebefore="no">.</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    
    <rule id="compounds" name="Przymiotniki złożone">
      <pattern>
        <marker>
        <token postag="adja"/>
        </marker>
        <token spacebefore="no">-</token>
        <token postag="adj:.*" postag_regexp="yes"></token>
      </pattern>
      <disambig action="ignore_spelling"></disambig>
    </rule>
    
    <rule id='KONSKI_ZAB' name="końskiego zębu - dobra pisownia">
      <pattern>
        <token>końskiego</token>
         <marker>
          <token>zębu</token>
         </marker>      
      </pattern>
      <disambig action="ignore_spelling"/>      
    </rule>
    
    <rule id="LICZBY_RZYMSKIE" name="Pomijaj liczby rzymskie">
        <pattern case_sensitive="yes">
            <token regexp="yes">(?:M*(?:D?C{0,3}|C[DM])(?:L?X{0,3}|X[LC])(?:V?I{0,3}|I[VX]))(?:-(?:M*(?:D?C{0,3}|C[DM])(?:L?X{0,3}|X[LC])(?:V?I{0,3}|I[VX])))?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="SPOLKA_AKCYJNA_SA" name="SA w nazwach spółek">
        <pattern case_sensitive="yes">
            <token regexp="yes">\p{Lu}.+</token>
            <token>SA</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="SZ_PAN" name="Sz. Pan/Pani">
        <pattern>
            <marker>
                <token>Sz</token>
            </marker>
            <token>.</token>
            <token inflected="yes" regexp="yes">(?iu)Pani?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="KATOW" name="Katow.">
        <pattern case_sensitive="yes">
            <marker>
            <token>Katow</token>
            </marker>
            <token spacebefore="no">.</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="SPOLDZ" name="spółdz">
        <pattern>
            <marker><token>spółdz</token></marker>
            <token spacebefore="no">.</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="MULTIPLE_HYPHENS" name="dywizy - jeden token w naszym układzie">
        <pattern>
            <token regexp="yes">-+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
        
</rules>